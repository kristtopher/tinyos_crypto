<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="41:TestBluetoothAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fe9e78e1220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fe9e7aba760"/></to>
    </wire>
    <wire loc="72:../../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fe9e7aba760"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fe9e78f2590"/></to>
    </wire>
    <wire loc="44:TestBluetoothAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe9e78d4500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe9e7897ba0"/></to>
    </wire>
    <wire loc="52:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe9e7897ba0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe9e7890620"/></to>
    </wire>
    <wire loc="47:TestBluetoothAppC.nc">
      <from><interface-ref name="activityTimer" scoped="" ref="0x7fe9e78ade70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e7627640"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe9e7627640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe9e761e7d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:TestBluetoothAppC.nc">
      <from><interface-ref name="BluetoothInit" scoped="" ref="0x7fe9e78e0cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e746f430"/></to>
    </wire>
    <wire loc="62:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe9e746f430"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e73e73b0"/></to>
    </wire>
    <wire loc="51:TestBluetoothAppC.nc">
      <from><interface-ref name="BTStdControl" scoped="" ref="0x7fe9e78d1d30"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe9e7472020"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe9e7472020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe9e73e79f0"/></to>
    </wire>
    <wire loc="52:TestBluetoothAppC.nc">
      <from><interface-ref name="Bluetooth" scoped="" ref="0x7fe9e78bb5f0"/></from>
      <to><interface-ref name="Bluetooth" scoped="" ref="0x7fe9e74727e0"/></to>
    </wire>
    <wire loc="61:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="Bluetooth" scoped="" ref="0x7fe9e74727e0"/></from>
      <to><interface-ref name="Bluetooth" scoped="" ref="0x7fe9e73e62d0"/></to>
    </wire>
    <wire loc="53:../../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe9e7abcc10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e7616400"/></to>
    </wire>
    <wire loc="67:../../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fe9e78f2c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fe9e81193a0"/></to>
    </wire>
    <wire loc="53:../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fe9e81193a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fe9e7af1c30"/></to>
    </wire>
    <wire loc="68:../../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fe9e78ed6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e7abbc40"/></to>
    </wire>
    <wire loc="46:../../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe9e7abbc40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e7ab6a90"/></to>
    </wire>
    <wire loc="71:../../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe9e78eddc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fe9e7abcc10"/></to>
    </wire>
    <wire loc="47:../../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fe9e7ab31e0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fe9e7ab4910"/></to>
    </wire>
    <wire loc="46:../../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fe9e7ab4910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e7a86850"/></to>
    </wire>
    <wire loc="48:../../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fe9e7ab38c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e7ab58a0"/></to>
    </wire>
    <wire loc="57:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fe9e7ab2020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e7868dd0"/></to>
    </wire>
    <wire loc="46:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe9e7a86850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e7a6e7e0"/></to>
    </wire>
    <wire loc="47:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe9e7a7dde0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe9e7a6c020"/></to>
    </wire>
    <wire loc="48:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe9e7d9a4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe9e7a6b360"/></to>
    </wire>
    <wire loc="113:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fe9e7a285a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe9e79666d0"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fe9e7a16020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe9e795eb30"/></to>
    </wire>
    <wire loc="108:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fe9e7a1f700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe9e796b160"/></to>
    </wire>
    <wire loc="149:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fe9e7a03a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe9e7945cb0"/></to>
    </wire>
    <wire loc="107:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fe9e7a26aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe9e796c480"/></to>
    </wire>
    <wire loc="148:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fe9e7a0a020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe9e7945020"/></to>
    </wire>
    <wire loc="170:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fe9e7a00a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe9e792dcb0"/></to>
    </wire>
    <wire loc="154:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fe9e7a115a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe9e793e220"/></to>
    </wire>
    <wire loc="99:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fe9e7a29b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe9e79bb9d0"/></to>
    </wire>
    <wire loc="135:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fe9e7a06a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe9e79542f0"/></to>
    </wire>
    <wire loc="134:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fe9e7a0c3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe9e7955610"/></to>
    </wire>
    <wire loc="133:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fe9e7a155a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe9e7956220"/></to>
    </wire>
    <wire loc="115:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fe9e7a1e700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe9e79647a0"/></to>
    </wire>
    <wire loc="156:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fe9e7a02a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe9e793c2f0"/></to>
    </wire>
    <wire loc="140:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fe9e7a14be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe9e794e6d0"/></to>
    </wire>
    <wire loc="114:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fe9e7a25890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe9e7965ac0"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fe9e7a39060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e79c9540"/></to>
    </wire>
    <wire loc="155:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fe9e7a0ada0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe9e793d610"/></to>
    </wire>
    <wire loc="106:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fe9e7a300c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe9e796d020"/></to>
    </wire>
    <wire loc="161:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fe9e7a10a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe9e79376d0"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fe9e7a196d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe9e7974a90"/></to>
    </wire>
    <wire loc="142:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fe9e7a04a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe9e794c7a0"/></to>
    </wire>
    <wire loc="100:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fe9e7a22cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe9e7975de0"/></to>
    </wire>
    <wire loc="141:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fe9e7a0b1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe9e794dac0"/></to>
    </wire>
    <wire loc="163:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fe9e7a01a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe9e79357a0"/></to>
    </wire>
    <wire loc="147:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fe9e7a120c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe9e7947b30"/></to>
    </wire>
    <wire loc="120:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fe9e7a186c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e79c23e0"/></to>
    </wire>
    <wire loc="162:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fe9e7a09b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe9e7936ac0"/></to>
    </wire>
    <wire loc="128:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fe9e7a07a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe9e795ccb0"/></to>
    </wire>
    <wire loc="169:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fe9e7a08a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe9e792d020"/></to>
    </wire>
    <wire loc="127:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fe9e7a0d570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe9e795c020"/></to>
    </wire>
    <wire loc="168:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fe9e7a0e020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe9e7930b30"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fe9e79c7450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe9e79c8d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fe9e79c7aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fe9e7928a90"/></to>
    </wire>
    <wire loc="96:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fe9e79c6120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fe9e7925260"/></to>
    </wire>
    <wire loc="102:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe9e7973930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e79c9540"/></to>
    </wire>
    <wire loc="103:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe9e7970020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe9e79c8d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe9e796a020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e79c9540"/></to>
    </wire>
    <wire loc="110:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe9e79697a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe9e79c8d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe9e7963610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e79c9540"/></to>
    </wire>
    <wire loc="117:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe9e7962c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe9e79c8d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fe9e79c02f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe9e79c1bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fe9e79c0940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fe9e79259f0"/></to>
    </wire>
    <wire loc="123:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fe9e79bf020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fe9e7924240"/></to>
    </wire>
    <wire loc="129:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe9e795bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e79c23e0"/></to>
    </wire>
    <wire loc="130:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe9e79592f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe9e79c1bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe9e7953160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e79c23e0"/></to>
    </wire>
    <wire loc="137:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe9e79527a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe9e79c1bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe9e794b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e79c23e0"/></to>
    </wire>
    <wire loc="144:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe9e794ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe9e79c1bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe9e7944b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e79c23e0"/></to>
    </wire>
    <wire loc="151:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe9e79422f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe9e79c1bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe9e793b160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e79c23e0"/></to>
    </wire>
    <wire loc="158:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe9e793a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe9e79c1bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe9e7934610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e79c23e0"/></to>
    </wire>
    <wire loc="165:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe9e7933c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe9e79c1bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe9e792cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e79c23e0"/></to>
    </wire>
    <wire loc="172:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe9e792a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe9e79c1bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fe9e8188410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe9e7af0b70"/></to>
    </wire>
    <wire loc="55:../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fe9e7ae92c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fe9e810b3b0"/></to>
    </wire>
    <wire loc="62:TestBluetoothC.nc">
      <from><interface-ref name="sendStuff" scoped="" ref="0x7fe9e78a5550"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe9e8188410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe9e7868dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e7890020"/></to>
    </wire>
    <wire loc="55:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fe9e7888b50"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fe9e78915c0"/></to>
    </wire>
    <wire loc="59:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fe9e78915c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe9e7650020"/></to>
    </wire>
    <wire loc="56:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fe9e788de30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fe9e786a830"/></to>
    </wire>
    <wire loc="62:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fe9e786a830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe9e763cb90"/></to>
    </wire>
    <wire loc="57:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fe9e7886020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fe9e7869b50"/></to>
    </wire>
    <wire loc="65:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fe9e7869b50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe9e7637710"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe9e763f2f0"/></from>
      <to><interface-ref name="Port40" scoped="" ref="0x7fe9e7829020"/></to>
    </wire>
    <wire loc="471:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fe9e7829020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7726a60"/></to>
    </wire>
    <wire loc="63:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe9e763bde0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fe9e7824200"/></to>
    </wire>
    <wire loc="473:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fe9e7824200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e771de00"/></to>
    </wire>
    <wire loc="66:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe9e7635930"/></from>
      <to><interface-ref name="Port43" scoped="" ref="0x7fe9e7822200"/></to>
    </wire>
    <wire loc="474:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fe9e7822200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7718740"/></to>
    </wire>
    <wire loc="442:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fe9e7851020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7786100"/></to>
    </wire>
    <wire loc="455:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fe9e783d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7756d10"/></to>
    </wire>
    <wire loc="531:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fe9e77f3560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7748d10"/></to>
    </wire>
    <wire loc="551:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fe9e77cf570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76bc100"/></to>
    </wire>
    <wire loc="532:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fe9e77f1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7743740"/></to>
    </wire>
    <wire loc="460:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fe9e7839020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e774c100"/></to>
    </wire>
    <wire loc="486:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fe9e7810200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76ed740"/></to>
    </wire>
    <wire loc="497:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fe9e7800200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76c7d10"/></to>
    </wire>
    <wire loc="535:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fe9e77eb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e773ad10"/></to>
    </wire>
    <wire loc="545:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fe9e77db570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76d9100"/></to>
    </wire>
    <wire loc="557:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fe9e77c6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76b8d10"/></to>
    </wire>
    <wire loc="445:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fe9e784b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7777100"/></to>
    </wire>
    <wire loc="536:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fe9e77e9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7735740"/></to>
    </wire>
    <wire loc="450:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fe9e7847020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e776e740"/></to>
    </wire>
    <wire loc="463:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fe9e7833020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e773e100"/></to>
    </wire>
    <wire loc="476:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fe9e781e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e770ed10"/></to>
    </wire>
    <wire loc="489:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fe9e780a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76de740"/></to>
    </wire>
    <wire loc="500:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fe9e77fa200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76b8d10"/></to>
    </wire>
    <wire loc="440:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fe9e7855020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7790d10"/></to>
    </wire>
    <wire loc="453:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fe9e7841020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7760860"/></to>
    </wire>
    <wire loc="466:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fe9e782d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e772f100"/></to>
    </wire>
    <wire loc="530:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fe9e77f5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7748d10"/></to>
    </wire>
    <wire loc="548:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fe9e77d5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76cb100"/></to>
    </wire>
    <wire loc="555:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fe9e77c9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76b8d10"/></to>
    </wire>
    <wire loc="541:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fe9e77e1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76f2d10"/></to>
    </wire>
    <wire loc="484:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fe9e7814200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76f6100"/></to>
    </wire>
    <wire loc="495:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fe9e7804200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76d0740"/></to>
    </wire>
    <wire loc="549:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fe9e77d3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76c7d10"/></to>
    </wire>
    <wire loc="538:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fe9e77e7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7700d10"/></to>
    </wire>
    <wire loc="443:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fe9e784f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7782d10"/></to>
    </wire>
    <wire loc="456:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fe9e783b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7751740"/></to>
    </wire>
    <wire loc="493:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fe9e7808200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76d9100"/></to>
    </wire>
    <wire loc="461:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fe9e7837020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7748d10"/></to>
    </wire>
    <wire loc="487:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fe9e780e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76e7100"/></to>
    </wire>
    <wire loc="498:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fe9e77fe200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76c1740"/></to>
    </wire>
    <wire loc="540:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fe9e77e3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76f6100"/></to>
    </wire>
    <wire loc="438:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fe9e7863020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e77996d0"/></to>
    </wire>
    <wire loc="451:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fe9e7845020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7769100"/></to>
    </wire>
    <wire loc="464:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fe9e7831020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e773ad10"/></to>
    </wire>
    <wire loc="477:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fe9e781c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7709740"/></to>
    </wire>
    <wire loc="542:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fe9e77df580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e772f100"/></to>
    </wire>
    <wire loc="546:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fe9e77d9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76d5d10"/></to>
    </wire>
    <wire loc="552:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fe9e77cd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76b8d10"/></to>
    </wire>
    <wire loc="482:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fe9e7818200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7700d10"/></to>
    </wire>
    <wire loc="543:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fe9e77dd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e772bd10"/></to>
    </wire>
    <wire loc="441:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fe9e7853020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e778b740"/></to>
    </wire>
    <wire loc="454:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fe9e783f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e775b270"/></to>
    </wire>
    <wire loc="467:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fe9e782b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e772bd10"/></to>
    </wire>
    <wire loc="539:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fe9e77e5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76fb740"/></to>
    </wire>
    <wire loc="550:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fe9e77d1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76c1740"/></to>
    </wire>
    <wire loc="472:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fe9e7826200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7721460"/></to>
    </wire>
    <wire loc="485:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fe9e7812200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76f2d10"/></to>
    </wire>
    <wire loc="496:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fe9e7802200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76cb100"/></to>
    </wire>
    <wire loc="444:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fe9e784d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e777c740"/></to>
    </wire>
    <wire loc="494:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fe9e7806200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76d5d10"/></to>
    </wire>
    <wire loc="449:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fe9e7849020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7773d10"/></to>
    </wire>
    <wire loc="462:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fe9e7835020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7743740"/></to>
    </wire>
    <wire loc="475:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fe9e7820200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7713100"/></to>
    </wire>
    <wire loc="488:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fe9e780c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76e3d10"/></to>
    </wire>
    <wire loc="499:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fe9e77fc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76bc100"/></to>
    </wire>
    <wire loc="439:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fe9e7858020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7794100"/></to>
    </wire>
    <wire loc="452:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fe9e7843020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7765d10"/></to>
    </wire>
    <wire loc="465:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fe9e782f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7735740"/></to>
    </wire>
    <wire loc="478:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fe9e781a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e7704100"/></to>
    </wire>
    <wire loc="534:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fe9e77ed560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e773e100"/></to>
    </wire>
    <wire loc="547:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fe9e77d7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76d0740"/></to>
    </wire>
    <wire loc="533:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fe9e77ef580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e773e100"/></to>
    </wire>
    <wire loc="483:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fe9e7816200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76fb740"/></to>
    </wire>
    <wire loc="554:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fe9e77cb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76bc100"/></to>
    </wire>
    <wire loc="558:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fe9e77c4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e76de740"/></to>
    </wire>
    <wire loc="529:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fe9e77f71f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe9e774c100"/></to>
    </wire>
    <wire loc="54:../../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fe9e761e7d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe9e76141d0"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fe9e76141d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e749b690"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe9e7616400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e7517760"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fe9e760ca80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe9e748dcf0"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe9e7517760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e6c53c40"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fe9e7496c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe9e74ebcf0"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe9e74e41d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe9e7516020"/></to>
    </wire>
    <wire loc="53:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe9e7516020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe9e6c4c890"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe9e7482020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe9e7594020"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe9e7594020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe9e75580f0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe9e6c53c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe9e6c36660"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fe9e6c440a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe9e6c514f0"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe9e6c514f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe9e6c35020"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe9e6c48c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe9e7594020"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e6c31190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e6c3b340"/></to>
    </wire>
    <wire loc="49:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e6c3b340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e75ec8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e6c30770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e6c3aa80"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e6c3aa80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e75e9560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e6c2fa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e6c39da0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e6c39da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e75e7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e75ec8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe9e7a186c0"/></to>
    </wire>
    <wire loc="59:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e75e9560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fe9e7a16020"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e75e7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fe9e7a0d570"/></to>
    </wire>
    <wire loc="62:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e75ec8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe9e7a186c0"/></to>
    </wire>
    <wire loc="63:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e75e9560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fe9e7a155a0"/></to>
    </wire>
    <wire loc="64:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e75e7020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB1" scoped="" ref="0x7fe9e7a0c3e0"/></to>
    </wire>
    <wire loc="66:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e75ec8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe9e7a186c0"/></to>
    </wire>
    <wire loc="67:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e75e9560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fe9e7a14be0"/></to>
    </wire>
    <wire loc="68:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e75e7020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fe9e7a0b1f0"/></to>
    </wire>
    <wire loc="70:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e75ec8b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe9e7a186c0"/></to>
    </wire>
    <wire loc="71:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e75e9560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fe9e7a120c0"/></to>
    </wire>
    <wire loc="72:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e75e7020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fe9e7a0a020"/></to>
    </wire>
    <wire loc="74:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e75ec8b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe9e7a186c0"/></to>
    </wire>
    <wire loc="75:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e75e9560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fe9e7a115a0"/></to>
    </wire>
    <wire loc="76:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e75e7020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fe9e7a0ada0"/></to>
    </wire>
    <wire loc="78:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e75ec8b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe9e7a186c0"/></to>
    </wire>
    <wire loc="79:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e75e9560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fe9e7a10a50"/></to>
    </wire>
    <wire loc="80:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e75e7020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fe9e7a09b80"/></to>
    </wire>
    <wire loc="82:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e75ec8b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe9e7a186c0"/></to>
    </wire>
    <wire loc="83:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e75e9560"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fe9e7a0e020"/></to>
    </wire>
    <wire loc="84:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e75e7020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fe9e7a08a20"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fe9e7555540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fe9e758b020"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fe9e758b020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe9e75860a0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e75772c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe9e7a186c0"/></to>
    </wire>
    <wire loc="74:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fe9e74e1490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe9e8188410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fe9e7490e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe9e8188410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="UARTControl" scoped="" ref="0x7fe9e7377690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe9e71bbc80"/></to>
    </wire>
    <wire loc="88:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe9e71bbc80"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fe9e71b4550"/></to>
    </wire>
    <wire loc="65:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="UARTData" scoped="" ref="0x7fe9e7372a00"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe9e71b8860"/></to>
    </wire>
    <wire loc="89:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe9e71b8860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fe9e71af130"/></to>
    </wire>
    <wire loc="66:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="RTSInterrupt" scoped="" ref="0x7fe9e736daa0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fe9e72b1bc0"/></to>
    </wire>
    <wire loc="72:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fe9e72b1bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fe9e729ca30"/></to>
    </wire>
    <wire loc="67:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="ConnectionInterrupt" scoped="" ref="0x7fe9e7373a70"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fe9e72a8bc0"/></to>
    </wire>
    <wire loc="82:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fe9e72a8bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fe9e7294bc0"/></to>
    </wire>
    <wire loc="68:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe9e73708e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe9e7897ba0"/></to>
    </wire>
    <wire loc="376:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <from><interface-ref name="runSetCommands" scoped="" ref="0x7fe9e7307380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe9e8188410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="302:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <from><interface-ref name="runMasterCommands" scoped="" ref="0x7fe9e731b600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe9e8188410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <from><interface-ref name="sendNextChar" scoped="" ref="0x7fe9e735c7c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe9e8188410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fe9e72b3bc0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fe9e729ea30"/></to>
    </wire>
    <wire loc="73:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fe9e72b0bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fe9e729ba30"/></to>
    </wire>
    <wire loc="77:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fe9e72aebc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fe9e7299a30"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fe9e72b5bc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fe9e72a0a30"/></to>
    </wire>
    <wire loc="80:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fe9e72abbc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fe9e7296a30"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fe9e72b2bc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fe9e729da30"/></to>
    </wire>
    <wire loc="83:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fe9e72a7bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fe9e7293bc0"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fe9e72b9cf0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fe9e72a59c0"/></to>
    </wire>
    <wire loc="78:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fe9e72adbc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fe9e7298a30"/></to>
    </wire>
    <wire loc="69:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fe9e72b4bc0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fe9e729fa30"/></to>
    </wire>
    <wire loc="81:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fe9e72a9c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fe9e7295bc0"/></to>
    </wire>
    <wire loc="76:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fe9e72afbc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fe9e729aa30"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fe9e72b6c40"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fe9e72a1a30"/></to>
    </wire>
    <wire loc="79:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fe9e72acbc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fe9e7297a30"/></to>
    </wire>
    <wire loc="87:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe9e71bb450"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe9e71b7bc0"/></to>
    </wire>
    <wire loc="91:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fe9e71afa00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7fe9e77e5580"/></to>
    </wire>
    <wire loc="92:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fe9e71ad990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7fe9e77e3580"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fe9e71ab990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7fe9e77e1580"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fe9e71a9990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7fe9e77dd580"/></to>
    </wire>
    <wire loc="95:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fe9e71a7990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7fe9e77df580"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../../tos/system/MainC.nc">
      <documentation loc="45:../../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="38:../../../../tos/platforms/shimmer2r/PlatformC.nc">
      <documentation loc="32:../../../../tos/platforms/shimmer2r/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../../tos/platforms/shimmer2r/PlatformP.nc">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:../../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <documentation loc="33:../../../../tos/platforms/shimmer2r/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestBluetoothC" loc="38:TestBluetoothC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="46:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <documentation loc="34:../../../../tos/platforms/shimmer2r/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="45:../../../../tos/platforms/shimmer2r/LedsP.nc" safe="">
      <documentation loc="35:../../../../tos/platforms/shimmer2r/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="41:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <documentation loc="34:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestBluetoothAppC.activityTimer" loc="44(TestBluetoothAppC.activityTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7830"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe9e78b7ba0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7830"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe9e78b7ba0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7830"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe9e78b7ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7830"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe9e78b7ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RovingNetworksC" loc="45:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <documentation loc="34:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
        <short>&#10; </short>
        <long>&#10; @author Steve Ayer&#10; @author Adrian Burns&#10; @date February, 2007&#10;&#10; @author Mike Healy&#10; @date April 20, 2009 - ported to TinyOS 2.x &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RovingNetworksP" loc="47:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fe9e79fb890" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fe9e79fbc30" loc="41:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fe9e79fa020" loc="42:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fe9e79fa3a0" loc="43:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fe9e79fa720" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fe9e79faa90" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fe9e79fae20" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fe9e79f9200" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fe9e79f95d0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fe9e79bde70" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fe9e79ba270" loc="41:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fe9e77bf9f0" loc="40:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fe9e77bfda0" loc="41:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fe9e77be1a0" loc="42:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fe9e77be550" loc="43:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fe9e77be8c0" loc="44:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fe9e75c79d0" loc="43:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fe9e75c79d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fe9e7585120" loc="42:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fe9e7585120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fe9e7574a50" loc="55:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fe9e7574a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fe9e7571290" loc="56:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fe9e7571290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fe9e7571680" loc="57:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fe9e7571680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fe9e7571e60" loc="58:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fe9e7571e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fe9e756f260" loc="59:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fe9e756fa60" loc="60:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fe9e756fa60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fe9e7595ac0" loc="52:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fe9e7595ac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fe9e754e2d0" loc="53:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fe9e754e2d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fe9e754e6c0" loc="54:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fe9e754e6c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fe9e754d020" loc="55:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fe9e754d020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fe9e754d3f0" loc="56:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe9e750f4f0" loc="46:../../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe9e750f4f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe9e74ded70" loc="46:../../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe9e74ded70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fe9e74db0d0" loc="46:../../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe9e748b1f0" loc="46:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe9e748b1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fe9e7abcc10" loc="58:../../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fe9e7abcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7abb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fe9e7aba760" loc="57:../../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fe9e7aba760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe9e7abaae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe9e7abbc40" loc="40:../../../../tos/platforms/shimmer2r/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e7abbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7ab6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fe9e7ab38c0" loc="6:../../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fe9e7ab38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7ab3c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe9e7ab6a90" loc="4:../../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e7ab6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7ab6e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fe9e7ab31e0" loc="5:../../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fe9e7ab31e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7ab3560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fe9e7ab2020" loc="7:../../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fe9e7ab2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7ab23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe9e7ab58a0" loc="39:../../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e7ab58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7ab5c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fe9e7ab4910" loc="39:../../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fe9e7ab4910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7ab4c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fe9e7a7dde0" loc="40:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe9e7a7dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fe9e7a82c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fe9e7a82310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fe9e7a824a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fe9e7a82630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fe9e7a82180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fe9e7a827c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fe9e7a82950"/>
        <function-ref name="initClocks" scoped="" ref="0x7fe9e7a82ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe9e7a86850" loc="39:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e7a86850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7a86bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fe9e7a6c020" loc="46:../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe9e7a6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fe9e7a6b020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fe9e7a6c530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fe9e7a6c6c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fe9e7a6c850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fe9e7a6c3a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fe9e7a6c9e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fe9e7a6cb70"/>
        <function-ref name="initClocks" scoped="" ref="0x7fe9e7a6cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fe9e7a6b360" loc="47:../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe9e7a6b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fe9e7a6b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe9e7a6e7e0" loc="45:../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e7a6e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7a6eb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fe9e7a285a0" loc="42:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fe9e7a285a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7a28920"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7a28ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7a28c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7a28dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e7a27020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7a271b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e7a27340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7a274d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7a27660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fe9e7a16020" loc="51:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fe9e7a16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7a163a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7a16530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7a166c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7a16850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e7a169e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7a16b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e7a16d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7a15020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7a151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fe9e7a1f700" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fe9e7a1f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a1fa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7a1fc10"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e7a1fda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7a1e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7a1e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7a1e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fe9e7a03a20" loc="68:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fe9e7a03a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a03da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7a02020"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e7a021b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7a02340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7a024d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7a02660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fe9e7a26aa0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fe9e7a26aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a26e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7a25020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e7a251b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7a25340"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7a254d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fe9e7a0a020" loc="61:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fe9e7a0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a0a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7a0a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e7a0a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7a0a850"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7a0a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fe9e7a00a20" loc="71:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fe9e7a00a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a00da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e79ff020"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e79ff1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e79ff340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e79ff4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e79ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fe9e7a115a0" loc="55:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fe9e7a115a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7a11920"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7a11ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7a11c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7a11dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e7a10020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7a101b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e7a10340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7a104d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7a10660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fe9e7a29b10" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fe9e7a29b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7a31020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7a311b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7a31340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7a314d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e7a31660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7a317f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e7a31980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7a31b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7a31ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fe9e7a06a20" loc="66:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fe9e7a06a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a06da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7a04020"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e7a041b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7a04340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7a044d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7a04660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fe9e7a0c3e0" loc="59:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fe9e7a0c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a0c760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7a0c8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e7a0ca80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7a0cc10"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7a0cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fe9e7a155a0" loc="52:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fe9e7a155a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7a15a20"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7a15bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7a15d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7a14020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e7a141b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7a14340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e7a144d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7a14660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7a147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fe9e7a1e700" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fe9e7a1e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a1ea80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7a1ec10"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e7a1eda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7a18020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7a181b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7a18340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fe9e7a02a20" loc="69:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fe9e7a02a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a02da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7a01020"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e7a011b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7a01340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7a014d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7a01660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fe9e7a14be0" loc="53:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fe9e7a14be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7a13020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7a131b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7a13340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7a134d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e7a13660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7a137f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e7a13980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7a13b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7a13ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fe9e7a25890" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fe9e7a25890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a25c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7a25da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e7a20020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7a201b0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7a20340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fe9e7a39060" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fe9e7a39060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7a393e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e7a39570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7a39700"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7a39890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7a39a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7a39bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e7a39d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7a38020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7a381b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e7a38340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e7a384d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fe9e7a0ada0" loc="62:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fe9e7a0ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a09180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7a09310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e7a094a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7a09630"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7a097c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fe9e7a300c0" loc="41:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fe9e7a300c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7a30440"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7a305d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7a30760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7a308f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e7a30a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7a30c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e7a30da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7a28020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7a281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fe9e7a10a50" loc="56:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fe9e7a10a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7a10dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7a0f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7a0f1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7a0f340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e7a0f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7a0f660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e7a0f7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7a0f980"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7a0fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fe9e7a196d0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fe9e7a196d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a19a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7a19be0"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e7a19d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7a1f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7a1f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7a1f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fe9e7a04a20" loc="67:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fe9e7a04a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a04da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7a03020"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e7a031b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7a03340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7a034d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7a03660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fe9e7a22cf0" loc="43:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fe9e7a22cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a260a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7a26230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e7a263c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7a26550"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7a266e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fe9e7a0b1f0" loc="60:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fe9e7a0b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a0b570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7a0b700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e7a0b890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7a0ba20"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7a0bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fe9e7a01a20" loc="70:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fe9e7a01a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a01da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7a00020"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e7a001b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7a00340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7a004d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7a00660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fe9e7a120c0" loc="54:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fe9e7a120c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7a12440"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7a125d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7a12760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7a128f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e7a12a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7a12c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e7a12da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7a11020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7a111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fe9e7a186c0" loc="50:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fe9e7a186c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7a18a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e7a18bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7a18d60"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7a17020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7a171b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7a17340"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e7a174d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7a17660"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7a177f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e7a17980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e7a17b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fe9e7a09b80" loc="63:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fe9e7a09b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a08020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7a081b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e7a08340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7a084d0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7a08660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fe9e7a07a20" loc="65:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fe9e7a07a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a07da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7a06020"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e7a061b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7a06340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7a064d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7a06660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fe9e7a08a20" loc="64:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fe9e7a08a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a07020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7a071b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e7a07340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7a074d0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7a07660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fe9e7a0d570" loc="58:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fe9e7a0d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7a0d8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7a0da80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e7a0dc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7a0dda0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7a0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fe9e7a0e020" loc="57:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fe9e7a0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7a0e3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7a0e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7a0e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7a0e850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e7a0e9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7a0eb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e7a0ed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7a0d020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7a0d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fe9e79c7aa0" loc="53:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fe9e79c7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e79c7e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fe9e79c7450" loc="52:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fe9e79c7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e79c77d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fe9e79c6120" loc="54:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fe9e79c6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e79c64a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fe9e79c8d80" loc="51:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe9e79c8d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e79c7180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe9e79c9540" loc="50:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e79c9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e79c98c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e79c9a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e79c9be0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e79c9d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e79c8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e79c81b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e79c8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e79c84d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e79c8660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e79c87f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e79c8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fe9e79c0940" loc="53:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fe9e79c0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e79c0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fe9e79c02f0" loc="52:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fe9e79c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e79c0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fe9e79bf020" loc="54:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fe9e79bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e79bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fe9e79c1bf0" loc="51:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe9e79c1bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e79c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe9e79c23e0" loc="50:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e79c23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e79c2760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e79c28f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e79c2a80"/>
        <function-ref name="get" scoped="" ref="0x7fe9e79c2c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e79c2da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e79c1020"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e79c11b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e79c1340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e79c14d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e79c1660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e79c17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe9e7974a90" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe9e7974a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7974e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7973020"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e79731b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7973340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e79734d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7973660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe9e79bb9d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe9e79bb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e79bbd50"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7975020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e79751b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7975340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e79754d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7975660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e79757f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7975980"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7975b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe9e7970020" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe9e7970020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e79703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe9e7975de0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe9e7975de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7974180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7974310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e79744a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7974630"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e79747c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe9e7973930" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e7973930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7973cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e7973e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7971020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e79711b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7971340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e79714d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e7971660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e79717f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7971980"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e7971b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e7971ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe9e796b160" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe9e796b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e796b4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e796b670"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e796b800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e796b990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e796bb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e796bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe9e796d020" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe9e796d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e796d3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e796d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e796d6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e796d850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e796d9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e796db70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e796dd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e796c020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e796c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe9e79697a0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe9e79697a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e7969b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe9e796c480" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe9e796c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e796c800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e796c990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e796cb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e796ccb0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e796ce40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe9e796a020" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e796a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e796a3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e796a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e796a6c0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e796a850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e796a9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e796ab70"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e796ad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7969020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e79691b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e7969340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e79694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe9e79647a0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe9e79647a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7964b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7964cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e7964e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7963020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e79631b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7963340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe9e79666d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe9e79666d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7966a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7966be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7966d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7965020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e79651b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7965340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e79654d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7965660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e79657f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe9e7962c50" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe9e7962c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e7960020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe9e7965ac0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe9e7965ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7965e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7964020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e79641b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7964340"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e79644d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe9e7963610" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e7963610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7963990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e7963b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7963cb0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7963e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7962020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e79621b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e7962340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e79624d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7962660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e79627f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e7962980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe9e795ccb0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe9e795ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e795b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e795b230"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e795b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e795b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e795b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e795b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe9e795eb30" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe9e795eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e795d020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e795d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e795d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e795d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e795d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e795d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e795d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e795db10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e795dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe9e79592f0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe9e79592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e7959670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe9e795c020" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe9e795c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e795c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e795c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e795c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e795c850"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e795c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe9e795bb40" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e795bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e795a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e795a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e795a340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e795a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e795a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e795a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e795a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e795ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e795aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e795ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e7959020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe9e79542f0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe9e79542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7954670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7954800"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e7954990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7954b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7954cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7954e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe9e7956220" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe9e7956220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e79565a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7956730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e79568c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7956a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e7956be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7956d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e7955020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e79551b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7955340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe9e79527a0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe9e79527a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e7952b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe9e7955610" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe9e7955610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7955990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7955b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e7955cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7955e40"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7954020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe9e7953160" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e7953160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e79534e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e7953670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7953800"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7953990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7953b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7953cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e7953e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7952020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e79521b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e7952340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e79524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe9e794c7a0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe9e794c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e794cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e794ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e794ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e794b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e794b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e794b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe9e794e6d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe9e794e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e794ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e794ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e794ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e794d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e794d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e794d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e794d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e794d660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e794d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe9e794ac50" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe9e794ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e7949020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe9e794dac0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe9e794dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e794de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e794c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e794c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e794c340"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e794c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe9e794b610" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e794b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e794b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e794bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e794bcb0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e794be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e794a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e794a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e794a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e794a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e794a660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e794a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e794a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe9e7945cb0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe9e7945cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e79440a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7944230"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e79443c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7944550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e79446e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7944870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe9e7947b30" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe9e7947b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7946020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e79461b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7946340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e79464d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e7946660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e79467f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e7946980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7946b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e7946ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe9e79422f0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe9e79422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e7942670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe9e7945020" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe9e7945020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e79453a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7945530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e79456c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7945850"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e79459e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe9e7944b40" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e7944b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7943020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e79431b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7943340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e79434d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7943660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e79437f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e7943980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7943b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7943ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e7943e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e7942020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe9e793c2f0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe9e793c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e793c670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e793c800"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e793c990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e793cb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e793ccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e793ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe9e793e220" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe9e793e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e793e5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e793e730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e793e8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e793ea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e793ebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e793ed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e793d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e793d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e793d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe9e793a7a0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe9e793a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e793ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe9e793d610" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe9e793d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e793d990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e793db20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e793dcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e793de40"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e793c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe9e793b160" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e793b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e793b4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e793b670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e793b800"/>
        <function-ref name="get" scoped="" ref="0x7fe9e793b990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e793bb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e793bcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e793be40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e793a020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e793a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e793a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e793a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe9e79357a0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe9e79357a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7935b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e7935cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e7935e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7934020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e79341b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e7934340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe9e79376d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe9e79376d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e7937a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e7937be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7937d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e7936020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e79361b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7936340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e79364d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e7936660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e79367f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe9e7933c50" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe9e7933c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e7932020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe9e7936ac0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe9e7936ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e7936e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e7935020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e79351b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e7935340"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e79354d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe9e7934610" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e7934610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7934990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e7934b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7934cb0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7934e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7933020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e79331b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e7933340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e79334d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7933660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e79337f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e7933980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe9e792dcb0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe9e792dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e792c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe9e792c230"/>
        <function-ref name="captured" scoped="" ref="0x7fe9e792c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e792c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e792c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe9e792c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe9e7930b30" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe9e7930b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e792e020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e792e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e792e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e792e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e792e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e792e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e792e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e792eb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e792eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe9e792a2f0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe9e792a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e792a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe9e792d020" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe9e792d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e792d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e792d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e792d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e792d850"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e792d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe9e792cb40" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e792cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e792b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e792b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e792b340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e792b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e792b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e792b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e792b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e792bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e792bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e792be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e792a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fe9e7924240" loc="7:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fe9e7924240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e79245c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fe9e7928a90" loc="4:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fe9e7928a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e7928e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fe9e7925260" loc="5:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fe9e7925260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e79255e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fe9e79259f0" loc="6:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fe9e79259f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe9e7925d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fe9e7d9a4c0" loc="55:../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe9e7d9a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fe9e7d9a840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fe9e810b3b0" loc="51:../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fe9e810b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fe9e810b730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fe9e810b8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fe9e810ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fe9e7f74bc0" loc="52:../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fe9e7f74bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fe9e80b0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fe9e78eddc0" loc="60:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fe9e78eddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e78ec180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fe9e78f2590" loc="57:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fe9e78f2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe9e78f2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fe9e78ed6c0" loc="59:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fe9e78ed6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e78eda40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fe9e78f2c00" loc="58:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fe9e78f2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e78ed020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe9e78ed1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe9e78ed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fe9e8188410" loc="48:../../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fe9e8188410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe9e8188790"/>
        <function-ref name="runTask" scoped="" ref="0x7fe9e8188920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fe9e81193a0" loc="47:../../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fe9e81193a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e8119720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe9e81198b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe9e8119a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fe9e7af0b70" loc="56:../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fe9e7af0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe9e7aef020"/>
        <function-ref name="runTask" scoped="" ref="0x7fe9e7aef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fe9e7ae92c0" loc="57:../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fe9e7ae92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fe9e7ae9640"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fe9e7ae97d0"/>
        <function-ref name="sleep" scoped="" ref="0x7fe9e7ae9960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fe9e7af1c30" loc="55:../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fe9e7af1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7af0020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe9e7af01b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe9e7af0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fe9e78e1220" loc="40:TestBluetoothC.nc">
      <component-ref qname="TestBluetoothC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fe9e78e1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe9e78e15a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="activityTimer" ref="0x7fe9e78ade70" loc="45:TestBluetoothC.nc">
      <component-ref qname="TestBluetoothC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="activityTimer" scoped="" ref="0x7fe9e78ade70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e78aa390"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e78ac970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe9e78ab720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe9e78ab2a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe9e78aac90"/>
        <function-ref name="gett0" scoped="" ref="0x7fe9e78aa810"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e78acdf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe9e78b9a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe9e78abd30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe9e78ac020"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e78ac4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BluetoothInit" ref="0x7fe9e78e0cd0" loc="42:TestBluetoothC.nc">
      <component-ref qname="TestBluetoothC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BluetoothInit" scoped="" ref="0x7fe9e78e0cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e78df0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe9e78d4500" loc="41:TestBluetoothC.nc">
      <component-ref qname="TestBluetoothC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe9e78d4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe9e78d4880"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe9e78d4a10"/>
        <function-ref name="led1On" scoped="" ref="0x7fe9e78d4ba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe9e78d4d30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe9e78e0020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78e01b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe9e78e0340"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe9e78e0980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78e04d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe9e78e0660"/>
        <function-ref name="led2On" scoped="" ref="0x7fe9e78e07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendStuff" ref="0x7fe9e78a5550" loc="62:TestBluetoothC.nc">
      <component-ref qname="TestBluetoothC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendStuff" scoped="" ref="0x7fe9e78a5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe9e78a58d0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe9e78a5a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Bluetooth" ref="0x7fe9e78bb5f0" loc="44:TestBluetoothC.nc">
      <component-ref qname="TestBluetoothC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Bluetooth" scoped="" ref="0x7fe9e78bb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Bluetooth"/>
      </instance>
      <interface-functions>
        <function-ref name="setDeviceClass" scoped="" ref="0x7fe9e78d0e30"/>
        <function-ref name="setBaudrate" scoped="" ref="0x7fe9e78bbb00"/>
        <function-ref name="setDiscoverable" scoped="" ref="0x7fe9e78bbc90"/>
        <function-ref name="dataAvailable" scoped="" ref="0x7fe9e78d2020"/>
        <function-ref name="disconnect" scoped="" ref="0x7fe9e78ba020"/>
        <function-ref name="connectionClosed" scoped="" ref="0x7fe9e78d21b0"/>
        <function-ref name="setName" scoped="" ref="0x7fe9e78d2340"/>
        <function-ref name="setServiceName" scoped="" ref="0x7fe9e78d24d0"/>
        <function-ref name="setRawBaudrate" scoped="" ref="0x7fe9e78d2660"/>
        <function-ref name="setPagingTime" scoped="" ref="0x7fe9e78d27f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe9e78d2980"/>
        <function-ref name="setInquiryTime" scoped="" ref="0x7fe9e78d2b10"/>
        <function-ref name="connect" scoped="" ref="0x7fe9e78d2ca0"/>
        <function-ref name="connectionMade" scoped="" ref="0x7fe9e78d0020"/>
        <function-ref name="setAuthentication" scoped="" ref="0x7fe9e78d01b0"/>
        <function-ref name="resetDefaults" scoped="" ref="0x7fe9e78bb970"/>
        <function-ref name="commandModeEnded" scoped="" ref="0x7fe9e78bbe20"/>
        <function-ref name="setServiceClass" scoped="" ref="0x7fe9e78d0340"/>
        <function-ref name="write" scoped="" ref="0x7fe9e78d04d0"/>
        <function-ref name="discoverDevices" scoped="" ref="0x7fe9e78d0660"/>
        <function-ref name="setRadioMode" scoped="" ref="0x7fe9e78d07f0"/>
        <function-ref name="setPIN" scoped="" ref="0x7fe9e78d0980"/>
        <function-ref name="setEncryption" scoped="" ref="0x7fe9e78d0b10"/>
        <function-ref name="disableRemoteConfig" scoped="" ref="0x7fe9e78d0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BTStdControl" ref="0x7fe9e78d1d30" loc="43:TestBluetoothC.nc">
      <component-ref qname="TestBluetoothC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BTStdControl" scoped="" ref="0x7fe9e78d1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe9e78d30e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e78d3270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fe9e7897ba0" loc="47:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe9e7897ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe9e7894020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe9e78941b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe9e7894340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe9e78944d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe9e7894660"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78947f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe9e7894980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe9e7893020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7894b10"/>
        <function-ref name="led0On" scoped="" ref="0x7fe9e7894ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe9e7894e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fe9e7888b50" loc="51:../../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fe9e7888b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e788d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e788d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e788d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e788d4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e788d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e788d7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e788d980"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e788db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe9e7890020" loc="47:../../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e7890020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e78903a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fe9e788de30" loc="52:../../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fe9e788de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e788c1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e788c370"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e788c500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e788c690"/>
        <function-ref name="get" scoped="" ref="0x7fe9e788c820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e788c9b0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e788cb40"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e788ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fe9e7890620" loc="48:../../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe9e7890620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe9e78909a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe9e7890b30"/>
        <function-ref name="led1On" scoped="" ref="0x7fe9e7890cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe9e7890e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe9e788f020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e788f1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe9e788f340"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe9e788f980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e788f4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe9e788f660"/>
        <function-ref name="led2On" scoped="" ref="0x7fe9e788f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fe9e7886020" loc="53:../../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fe9e7886020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7886530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e78866c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7886850"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78869e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7886b70"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7886d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7885020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fe9e78915c0" loc="42:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fe9e78915c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7891940"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7891ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7891c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7891df0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e786a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e786a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e786a340"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e786a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fe9e786a830" loc="43:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fe9e786a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e786abb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e786ad40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7869020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78691b0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7869340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e78694d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7869660"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e78697f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fe9e7868dd0" loc="45:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e7868dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7867180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fe9e7869b50" loc="44:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fe9e7869b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7868020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e78681b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7868340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78684d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7868660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e78687f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7868980"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7868b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fe9e7851020" loc="53:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fe9e7851020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78513a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7851530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78516c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7851850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78519e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7851b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7851d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7850020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78501b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7850340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78504d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7850660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78507f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7850a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7850c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fe9e783d020" loc="66:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fe9e783d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e783d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e783d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e783d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e783d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e783d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e783db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e783dd00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e783c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e783c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e783c340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e783c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e783c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e783c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e783ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e783cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fe9e77f3560" loc="145:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fe9e77f3560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77f38e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77f3a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77f3c00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77f3d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77f2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77f21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77f2340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77f24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77f2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77f27f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77f2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77f2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77f2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77f1020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fe9e77cf570" loc="165:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fe9e77cf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77cf8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77cfa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77cfc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77cfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77ce020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77ce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77ce340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77ce4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77ce660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77ce7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77ce980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77ceb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77ceca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77cd020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fe9e77f1580" loc="146:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fe9e77f1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77f1900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77f1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77f1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77f1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77f0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77f01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77f0340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77f04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77f0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77f07f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77f0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77f0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77f0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77ef020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fe9e7839020" loc="71:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fe9e7839020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78393a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7839530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78396c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7839850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78399e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7839b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7839d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7838020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7838340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7838660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7838a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7838c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fe9e7824200" loc="84:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fe9e7824200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7824580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7824710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78248a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7824a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7824bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7824d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7823020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78231b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7823340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78234d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7823660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78237f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7823980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7823c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7823da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fe9e7810200" loc="97:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fe9e7810200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7810580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7810710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78108a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7810a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7810bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7810d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e780f020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e780f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e780f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e780f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e780f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e780f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e780f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e780fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e780fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fe9e7800200" loc="108:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fe9e7800200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7800580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7800710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78008a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7800a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7800bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7800d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77ff020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77ff1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77ff340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77ff4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77ff660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77ff7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77ff980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77ffc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77ffda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fe9e77eb580" loc="149:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fe9e77eb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77eb900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77eba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77ebc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77ebdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77ea020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77ea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77ea340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77ea4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77ea660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77ea7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77ea980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77eab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77eaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77e9020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fe9e77db570" loc="159:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fe9e77db570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77db8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77dba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77dbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77dbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77da020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77da1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77da340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77da4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77da660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77da7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77da980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77dab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77daca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77d9020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fe9e77c6580" loc="171:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fe9e77c6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77c6900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77c6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77c6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77c6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77c5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77c51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77c5340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77c54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77c5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77c57f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77c5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77c5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77c5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77c4020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fe9e784b020" loc="56:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fe9e784b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e784b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e784b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e784b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e784b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e784b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e784bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e784bd00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e784a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e784a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e784a340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e784a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e784a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e784a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e784aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e784ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fe9e77e9580" loc="150:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fe9e77e9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77e9900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77e9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77e9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77e9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77e8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77e81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77e8340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77e84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77e8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77e87f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77e8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77e8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77e8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77e7020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fe9e7847020" loc="61:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fe9e7847020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78473a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7847530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78476c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7847850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78479e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7847b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7847d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7846020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7846340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7846660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7846a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7846c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fe9e7833020" loc="74:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fe9e7833020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7833530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78336c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7833850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7833b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7833d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7832020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7832340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7832660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7832a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7832c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fe9e781e200" loc="87:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fe9e781e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e781e580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e781e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e781e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e781ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e781ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e781ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e781d020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e781d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e781d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e781d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e781d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e781d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e781d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e781dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e781dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fe9e780a200" loc="100:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fe9e780a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e780a580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e780a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e780a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e780aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e780abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e780ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7809020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78091b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7809340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78094d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7809660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78097f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7809980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7809c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7809da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fe9e77fa200" loc="111:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fe9e77fa200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77fa580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77fa710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77fa8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77faa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77fabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77fad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77f9020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77f91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77f9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77f94d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77f9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77f97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77f9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77f9c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77f9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fe9e7855020" loc="51:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fe9e7855020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78553a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7855530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78556c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7855850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78559e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7855b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7855d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7854020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78541b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7854340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78544d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7854660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78547f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7854a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7854c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fe9e7841020" loc="64:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fe9e7841020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78414a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7841630"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78417c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7841950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7841ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7841c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7841e00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7840020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78401b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7840340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78404d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7840660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78407f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7840a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7840c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fe9e782d020" loc="77:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fe9e782d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e782d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e782d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e782d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e782d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e782d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e782db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e782dd00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e782c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e782c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e782c340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e782c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e782c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e782c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e782ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e782cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fe9e77f5580" loc="144:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fe9e77f5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77f5900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77f5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77f5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77f5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77f4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77f41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77f4340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77f44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77f4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77f47f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77f4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77f4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77f4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77f3020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fe9e77d5570" loc="162:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fe9e77d5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77d58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77d5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77d5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77d5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77d4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77d41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77d4340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77d44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77d4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77d47f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77d4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77d4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77d4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77d3020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fe9e77c9570" loc="169:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fe9e77c9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77c98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77c9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77c9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77c9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77c7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77c71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77c7340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77c74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77c7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77c77f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77c7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77c7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77c7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77c6020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fe9e77e1580" loc="155:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fe9e77e1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77e1900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77e1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77e1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77e1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77e0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77e01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77e0340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77e04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77e0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77e07f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77e0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77e0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77e0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77df020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fe9e7829020" loc="82:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fe9e7829020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78295a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7829730"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78298c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7829a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7829be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7829d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7828020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78281b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7828340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78284d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7828660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78287f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7828980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7828c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7828da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fe9e7814200" loc="95:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fe9e7814200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7814580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7814710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78148a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7814a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7814bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7814d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7813020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78131b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7813340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78134d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7813660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78137f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7813980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7813c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7813da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fe9e7804200" loc="106:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fe9e7804200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7804580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7804710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78048a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7804a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7804bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7804d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7803020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78031b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7803340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78034d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7803660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78037f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7803980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7803c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7803da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fe9e77d3570" loc="163:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fe9e77d3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77d38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77d3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77d3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77d3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77d2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77d21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77d2340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77d24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77d2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77d27f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77d2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77d2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77d2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77d1020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fe9e77e7570" loc="152:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fe9e77e7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77e78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77e7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77e7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77e7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77e6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77e61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77e6340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77e64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77e6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77e67f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77e6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77e6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77e6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77e5020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fe9e784f020" loc="54:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fe9e784f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e784f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e784f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e784f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e784f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e784f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e784fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e784fd00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e784e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e784e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e784e340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e784e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e784e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e784e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e784ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e784ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fe9e783b020" loc="67:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fe9e783b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e783b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e783b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e783b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e783b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e783b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e783bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e783bd00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e783a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e783a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e783a340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e783a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e783a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e783a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e783aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e783ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fe9e7808200" loc="104:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fe9e7808200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7808580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7808710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78088a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7808a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7808bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7808d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7807020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78071b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7807340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78074d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7807660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78077f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7807980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7807c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7807da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fe9e7837020" loc="72:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fe9e7837020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7837530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78376c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7837850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78379e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7837b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7837d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7836020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7836340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7836660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78367f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7836a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7836c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fe9e7822200" loc="85:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fe9e7822200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7822580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7822710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78228a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7822a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7822bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7822d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7821020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78211b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7821340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78214d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7821660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78217f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7821980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7821c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7821da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fe9e780e200" loc="98:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fe9e780e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e780e580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e780e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e780e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e780ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e780ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e780ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e780d020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e780d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e780d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e780d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e780d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e780d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e780d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e780dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e780dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fe9e77fe200" loc="109:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fe9e77fe200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77fe580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77fe710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77fe8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77fea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77febc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77fed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77fd020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77fd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77fd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77fd4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77fd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77fd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77fd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77fdc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77fdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fe9e77e3580" loc="154:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fe9e77e3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77e3900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77e3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77e3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77e3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77e2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77e21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77e2340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77e24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77e2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77e27f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77e2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77e2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77e2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77e1020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fe9e7863020" loc="49:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fe9e7863020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78633a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7863530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78636c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7863850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78639e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7863b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7863d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7862020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78621b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7862340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78624d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7862660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78627f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7862a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7862c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fe9e7845020" loc="62:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fe9e7845020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78453a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7845530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78456c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7845850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78459e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7845b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7845d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7844020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7844340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7844660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7844a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7844c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fe9e7831020" loc="75:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fe9e7831020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78313a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7831530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78316c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7831850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78319e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7831b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7831d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7830020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7830340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7830660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7830a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7830c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fe9e781c200" loc="88:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fe9e781c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e781c580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e781c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e781c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e781ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e781cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e781cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e781b020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e781b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e781b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e781b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e781b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e781b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e781b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e781bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e781bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fe9e77df580" loc="156:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fe9e77df580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77df900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77dfa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77dfc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77dfdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77de020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77de1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77de340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77de4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77de660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77de7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77de980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77deb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77deca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77dd020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fe9e77d9570" loc="160:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fe9e77d9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77d98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77d9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77d9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77d9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77d8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77d81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77d8340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77d84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77d8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77d87f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77d8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77d8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77d8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77d7020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fe9e77cd570" loc="166:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fe9e77cd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77cd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77cda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77cdc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77cdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77cc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77cc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77cc340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77cc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77cc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77cc7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77cc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77ccb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77ccca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77cb020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fe9e7818200" loc="93:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fe9e7818200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7818580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7818710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78188a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7818a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7818bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7818d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7817020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78171b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7817340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78174d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7817660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78177f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7817980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7817c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7817da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fe9e77dd580" loc="157:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fe9e77dd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77dd900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77dda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77ddc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77dddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77dc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77dc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77dc340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77dc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77dc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77dc7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77dc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77dcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77dcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77db020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fe9e7853020" loc="52:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fe9e7853020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78533a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7853530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78536c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7853850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78539e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7853b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7853d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7852020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7852340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7852660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7852a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7852c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fe9e783f020" loc="65:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fe9e783f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e783f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e783f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e783f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e783f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e783f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e783fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e783fd00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e783e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e783e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e783e340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e783e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e783e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e783e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e783ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e783ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fe9e782b020" loc="78:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fe9e782b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e782b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e782b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e782b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e782b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e782b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e782bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e782bd00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e782a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e782a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e782a340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e782a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e782a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e782a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e782aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e782ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fe9e77e5580" loc="153:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fe9e77e5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77e5900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77e5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77e5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77e5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77e4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77e41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77e4340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77e44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77e4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77e47f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77e4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77e4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77e4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77e3020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fe9e77d1570" loc="164:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fe9e77d1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77d18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77d1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77d1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77d1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77d0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77d01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77d0340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77d04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77d0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77d07f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77d0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77d0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77d0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77cf020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fe9e7826200" loc="83:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fe9e7826200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7826580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7826710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78268a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7826a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7826bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7826d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7825020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78251b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7825340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78254d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7825660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78257f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7825980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7825c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7825da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fe9e7812200" loc="96:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fe9e7812200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7812580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7812710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78128a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7812a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7812bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7812d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7811020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78111b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7811340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78114d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7811660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78117f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7811980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7811c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7811da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fe9e7802200" loc="107:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fe9e7802200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7802580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7802710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78028a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7802a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7802bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7802d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7801020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78011b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7801340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78014d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7801660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78017f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7801980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7801c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7801da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fe9e784d020" loc="55:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fe9e784d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e784d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e784d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e784d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e784d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e784d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e784db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e784dd00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e784c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e784c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e784c340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e784c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e784c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e784c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e784ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e784cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fe9e7806200" loc="105:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fe9e7806200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7806580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7806710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78068a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7806a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7806bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7806d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7805020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78051b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7805340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78054d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7805660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78057f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7805980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7805c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7805da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fe9e7849020" loc="60:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fe9e7849020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78493a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7849530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78496c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7849850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78499e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7849b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7849d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7848020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78481b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7848340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78484d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7848660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78487f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7848a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7848c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fe9e7835020" loc="73:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fe9e7835020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78353a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7835530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78356c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7835850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78359e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7835b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7835d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7834020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78341b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7834340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78344d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7834660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78347f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7834a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7834c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fe9e7820200" loc="86:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fe9e7820200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7820580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7820710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78208a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7820a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7820bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7820d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e781f020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e781f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e781f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e781f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e781f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e781f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e781f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e781fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e781fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fe9e780c200" loc="99:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fe9e780c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e780c580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e780c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e780c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e780ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e780cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e780cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e780b020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e780b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e780b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e780b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e780b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e780b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e780b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e780bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e780bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fe9e77fc200" loc="110:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fe9e77fc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77fc580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77fc710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77fc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77fca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77fcbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77fcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77fb020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77fb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77fb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77fb4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77fb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77fb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77fb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77fbc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77fbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fe9e7858020" loc="50:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fe9e7858020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78583a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7858530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78586c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7858850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78589e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7858b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7858d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7857020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78571b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7857340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78574d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7857660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78577f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7857a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7857c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fe9e7843020" loc="63:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fe9e7843020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e78433a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7843530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78436c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7843850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e78439e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7843b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7843d00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7842020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e78421b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7842340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e78424d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7842660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e78427f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7842a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7842c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fe9e782f020" loc="76:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fe9e782f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e782f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e782f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e782f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e782f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e782f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e782fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e782fd00"/>
        <function-ref name="get" scoped="" ref="0x7fe9e782e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e782e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e782e340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e782e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e782e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e782e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e782ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e782ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fe9e781a200" loc="89:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fe9e781a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e781a580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e781a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e781a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e781aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e781abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e781ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7819020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78191b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7819340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78194d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7819660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78197f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7819980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7819c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7819da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fe9e77ed560" loc="148:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fe9e77ed560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77ed8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77eda70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77edc00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77edd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77ec020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77ec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77ec340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77ec4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77ec660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77ec7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77ec980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77ecb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77ecca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77eb020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fe9e77d7570" loc="161:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fe9e77d7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77d78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77d7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77d7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77d7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77d6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77d61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77d6340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77d64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77d6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77d67f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77d6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77d6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77d6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77d5020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fe9e77ef580" loc="147:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fe9e77ef580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77ef900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77efa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77efc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77efdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77ee020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77ee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77ee340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77ee4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77ee660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77ee7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77ee980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77eeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77eeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77ed020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fe9e7816200" loc="94:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fe9e7816200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7816580"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7816710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e78168a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7816a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7816bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7816d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7815020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e78151b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7815340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e78154d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7815660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e78157f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7815980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7815c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7815da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fe9e77cb570" loc="168:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fe9e77cb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77cb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77cba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77cbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77cbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77ca020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77ca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77ca340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77ca4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77ca660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77ca7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77ca980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77cab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77caca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77c9020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fe9e77c4580" loc="172:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fe9e77c4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77c4900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77c4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77c4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77c4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77c3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77c31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77c3340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77c34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77c3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77c37f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77c3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77c3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77c3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77c2020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fe9e77f71f0" loc="143:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fe9e77f71f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77f7970"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e77f7b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77f7c90"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e77f7e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77f6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77f61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77f6340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77f64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77f6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77f67f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77f6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77f6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77f6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e77f5020"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e77996d0" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e77996d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7799a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7799be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7799d70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7798020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77981b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7798340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77984d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7798660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77987f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7798980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7798b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7798ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7798e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7797120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7794100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7794100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7794480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7794610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77947a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7794930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7794ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7794c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7794de0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7793020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77931b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7793340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77934d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7793660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77937f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7793a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7793c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7790d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7790d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e778f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e778f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e778f400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e778f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e778f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e778f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e778fa40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e778fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e778fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e778e020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e778e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e778e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e778e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e778e760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e778e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e778b740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e778b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e778bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e778bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e778bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e778a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e778a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e778a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e778a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e778a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e778a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e778a980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e778ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e778aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e778ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7789120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77892b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7786100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7786100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7786480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7786610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77867a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7786930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7786ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7786c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7786de0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7785020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77851b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7785340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77854d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7785660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77857f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7785a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7785c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7782d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7782d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77810e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7781270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7781400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7781590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7781720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77818b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7781a40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7781bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7781d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7780020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77801b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7780340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77804d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7780760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77808f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e777c740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e777c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e777cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e777cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e777cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e777b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e777b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e777b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e777b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e777b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e777b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e777b980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e777bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e777bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e777be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e777a120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e777a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7777100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7777100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7777480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7777610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77777a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7777930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7777ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7777c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7777de0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7776020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7776340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7776660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7776a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7776c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7773d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7773d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77720e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7772270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7772400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7772590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7772720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77728b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7772a40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7772bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7772d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7771020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77711b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7771340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77714d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7771760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77718f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e776e740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e776e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e776eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e776ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e776ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e776d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e776d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e776d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e776d4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e776d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e776d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e776d980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e776db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e776dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e776de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e776c120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e776c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7769100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7769100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7769480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7769610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77697a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7769930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7769ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7769c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7769de0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7768020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77681b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7768340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77684d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7768660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77687f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7768a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7768c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7765d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7765d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77640e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7764270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7764400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7764590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7764720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77648b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7764a40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7764bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7764d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7763020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77631b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7763340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77634d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7763760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7760860" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7760860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7760be0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7760d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e775f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e775f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e775f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e775f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e775f660"/>
        <function-ref name="get" scoped="" ref="0x7fe9e775f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e775f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e775fb10"/>
        <function-ref name="set" scoped="" ref="0x7fe9e775fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e775fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e775e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e775e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e775e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e775b270" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e775b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e775b5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e775b780"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e775b910"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e775baa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e775bc30"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e775bdc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7759020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e77591b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7759340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e77594d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7759660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e77597f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7759980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7759c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7759da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7756d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7756d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77550e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7755270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7755400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7755590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7755720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77558b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7755a40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7755bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7755d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7754020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77541b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7754340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77544d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7754760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77548f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7751740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7751740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7751ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7751c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7751de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7750020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77501b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7750340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77504d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7750660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77507f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7750980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7750b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7750ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7750e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e774f120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e774f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e774c100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e774c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e774c480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e774c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e774c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e774c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e774cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e774cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e774cde0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e774b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e774b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e774b340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e774b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e774b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e774b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e774ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e774bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7748d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7748d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77470e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7747270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7747400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7747590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7747720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77478b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7747a40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7747bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7747d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7746020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77461b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7746340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77464d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7746760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77468f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7743740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7743740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7743ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7743c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7743de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7742020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77421b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7742340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77424d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7742660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77427f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7742980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7742b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7742ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7742e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7741120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e773e100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e773e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e773e480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e773e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e773e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e773e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e773eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e773ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e773ede0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e773d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e773d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e773d340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e773d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e773d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e773d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e773da80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e773dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e773ad10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e773ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77390e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7739270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7739400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7739590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7739720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e77398b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7739a40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7739bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7739d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7738020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7738340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77384d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7738760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7735740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7735740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7735ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7735c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7735de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7733020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77331b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7733340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77334d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7733660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77337f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7733980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7733b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7733ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7733e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7732120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77322b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e772f100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e772f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e772f480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e772f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e772f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e772f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e772fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e772fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e772fde0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e772e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e772e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e772e340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e772e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e772e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e772e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e772ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e772ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e772bd10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e772bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e772a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e772a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e772a400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e772a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e772a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e772a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e772aa40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e772abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e772ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7729020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77291b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7729340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77294d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7729760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77298f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7726a60" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7726a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7726de0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7725020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77251b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7725340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77254d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7725660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77257f0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7725980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7725b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7725ca0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7725e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7724020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77241b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7724440"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77245d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7721460" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7721460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e77217e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7721970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7721b00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7721c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7721e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7720020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77201b0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7720340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77204d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7720660"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77207f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7720980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7720b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7720da0"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e771f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e771de00" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e771de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e771c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e771c350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e771c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e771c670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e771c800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e771c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e771cb20"/>
        <function-ref name="get" scoped="" ref="0x7fe9e771ccb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e771ce40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e771b020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e771b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e771b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e771b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e771b760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e771b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7718740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7718740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7718ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7718c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7718de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7717020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77171b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7717340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77174d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7717660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77177f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7717980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7717b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7717ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7717e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7716120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77162b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7713100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7713100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7713480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7713610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77137a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7713930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7713ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7713c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7713de0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7712020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77121b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7712340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77124d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7712660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77127f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7712a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7712c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e770ed10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e770ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e770d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e770d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e770d400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e770d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e770d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e770d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e770da40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e770dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e770dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e770c020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e770c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e770c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e770c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e770c760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e770c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7709740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7709740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7709ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7709c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7709de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7708020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e77081b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7708340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e77084d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7708660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77087f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7708980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7708b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7708ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7708e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7707120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e77072b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7704100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7704100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7704480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7704610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e77047a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7704930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7704ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e7704c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7704de0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7703020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e77031b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7703340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e77034d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7703660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e77037f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7703a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7703c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e7700d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e7700d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76ff0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76ff270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76ff400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76ff590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76ff720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76ff8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76ffa40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76ffbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76ffd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76fe020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76fe1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76fe340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76fe4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76fe760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76fe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76fb740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76fb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76fbac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76fbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76fbde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76fa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76fa1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76fa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76fa4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76fa660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76fa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76fa980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76fab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76faca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76fae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76f9120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76f92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76f6100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76f6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76f6480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76f6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76f67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76f6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76f6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76f6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76f6de0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76f5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76f51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76f5340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76f54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76f5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76f57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76f5a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76f5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76f2d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76f2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76f10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76f1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76f1400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76f1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76f1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76f18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76f1a40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76f1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76f1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76f0020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76f01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76f0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76f04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76f0760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76f08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76ed740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76ed740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76edac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76edc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76edde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76eb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76eb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76eb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76eb4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76eb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76eb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76eb980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76ebb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76ebca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76ebe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76ea120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76ea2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76e7100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76e7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76e7480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76e7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76e77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76e7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76e7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76e7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76e7de0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76e6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76e61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76e6340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76e64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76e6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76e67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76e6a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76e6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76e3d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76e3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76e20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76e2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76e2400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76e2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76e2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76e28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76e2a40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76e2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76e2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76e1020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76e11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76e1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76e14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76e1760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76e18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76de740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76de740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76deac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76dec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76dede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76dd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76dd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76dd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76dd4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76dd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76dd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76dd980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76ddb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76ddca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76dde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76dc120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76d9100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76d9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76d9480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76d9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76d97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76d9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76d9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76d9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76d9de0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76d8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76d81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76d8340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76d84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76d8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76d87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76d8a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76d8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76d5d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76d5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76d40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76d4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76d4400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76d4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76d4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76d48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76d4a40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76d4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76d4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76d3020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76d31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76d3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76d34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76d3760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76d38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76d0740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76d0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76d0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76d0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76d0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76cf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76cf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76cf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76cf4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76cf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76cf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76cf980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76cfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76cfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76cfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76ce120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76ce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76cb100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76cb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76cb480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76cb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76cb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76cb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76cbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76cbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76cbde0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76ca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76ca1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76ca340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76ca4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76ca660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76ca7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76caa80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76cac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76c7d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76c7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76c50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76c5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76c5400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76c5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76c5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76c58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76c5a40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76c5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76c5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76c4020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76c41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76c4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76c44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76c4760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76c48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76c1740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76c1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76c1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76c1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76c1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76c0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76c01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76c0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76c04d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76c0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76c07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76c0980"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76c0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76c0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76c0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76bf120"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76bf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76bc100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76bc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76bc480"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76bc610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76bc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76bc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76bcac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76bcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76bcde0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76bb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76bb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76bb340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76bb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76bb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76bb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76bba80"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76bbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe9e76b8d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe9e76b8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76b70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e76b7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e76b7400"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76b7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e76b7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76b78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e76b7a40"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76b7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e76b7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e76b6020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76b61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e76b6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76b64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76b6760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76b68f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe9e763f2f0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe9e763f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e763f670"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e763f800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e763f990"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e763fb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e763fcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e763fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e763e020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e763e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e763e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e763e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e763e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e763e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e763e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e763ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e763eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe9e7650020" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe9e7650020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e76503a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7650530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76506c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7650850"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76509e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7650b70"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7650d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e763f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe9e763bde0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe9e763bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e763a180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e763a310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e763a4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e763a630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e763a7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e763a950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e763aae0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e763ac70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e763ae00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7639020"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76391b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7639340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e76394d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e7639760"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e76398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe9e763cb90" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe9e763cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e763b020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e763b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e763b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e763b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e763b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e763b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e763b980"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e763bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe9e7635930" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe9e7635930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7635cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7635e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e7634020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e76341b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7634340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e76344d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7634660"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76347f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e7634980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e7634b10"/>
        <function-ref name="set" scoped="" ref="0x7fe9e7634ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e7634e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e7633020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e76332b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7633440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe9e7637710" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe9e7637710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e7637a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e7637c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e7637db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e7635020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e76351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e7635340"/>
        <function-ref name="set" scoped="" ref="0x7fe9e76354d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e7635660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe9e7627640" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestBluetoothAppC.activityTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e7627640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e7477c40"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e74781e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe9e7477020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe9e7478ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe9e7476590"/>
        <function-ref name="gett0" scoped="" ref="0x7fe9e7476110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e7478660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe9e747a390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe9e7477630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe9e747a860"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e747ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fe9e761e7d0" loc="49:../../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fe9e761e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e761ac40"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e761c260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe9e761a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe9e761cb60"/>
        <function-ref name="getdt" scoped="" ref="0x7fe9e7619590"/>
        <function-ref name="gett0" scoped="" ref="0x7fe9e7619110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e761c6e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe9e761d400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe9e761a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe9e761d8d0"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e761dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fe9e76141d0" loc="46:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fe9e76141d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e7611630"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7613c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe9e76129d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe9e7612550"/>
        <function-ref name="getdt" scoped="" ref="0x7fe9e760f020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe9e7611ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e76120d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe9e7614dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe9e7611020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe9e76132e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e76137b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe9e760ca80" loc="47:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fe9e760ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe9e760e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe9e7616400" loc="45:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e7616400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7616780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe9e7516020" loc="44:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe9e7516020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e7513870"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7515840"/>
        <function-ref name="startAt" scoped="" ref="0x7fe9e7513220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e7515d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe9e7513d30"/>
        <function-ref name="start" scoped="" ref="0x7fe9e7516e30"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e7515380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe9e7517760" loc="43:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e7517760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e7517ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe9e6c514f0" loc="44:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe9e6c514f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7830"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe9e78b7ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e6c4fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e6c50da0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe9e6c4f760"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e6c4f2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe9e6c4e2a0"/>
        <function-ref name="start" scoped="" ref="0x7fe9e6c503d0"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e6c508e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe9e6c53c40" loc="43:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e6c53c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e6c51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fe9e6c39da0" loc="41:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e6c39da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e6c38180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e6c38310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e6c384a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e6c38630"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e6c387c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fe9e6c3b340" loc="39:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e6c3b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e6c3b6c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e6c3b850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e6c3b9e0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e6c3bb70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e6c3bd00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e6c3a020"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e6c3a1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e6c3a340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e6c3a4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e6c3a660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e6c3a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fe9e6c3aa80" loc="40:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e6c3aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e6c3ae00"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e6c39020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e6c391b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e6c39340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e6c394d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e6c39660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e6c397f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e6c39980"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e6c39b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fe9e75e7020" loc="52:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e75e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e75e73a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e75e7530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e75e76c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e75e7850"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e75e79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fe9e75ec8b0" loc="50:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e75ec8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e75ecc30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e75ecdc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e75eb020"/>
        <function-ref name="get" scoped="" ref="0x7fe9e75eb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e75eb340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e75eb4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e75eb660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e75eb7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e75eb980"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e75ebb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e75ebca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fe9e75e9560" loc="51:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e75e9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e75e98e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e75e9a70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e75e9c00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e75e9d90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e75e8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e75e81b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e75e8340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e75e84d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e75e8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fe9e6c2fa80" loc="49:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe9e6c2fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe9e6c2fe00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe9e6c2e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe9e6c2e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe9e6c2e340"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e6c2e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fe9e6c31190" loc="47:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e6c31190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e6c31510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e6c316a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e6c31830"/>
        <function-ref name="get" scoped="" ref="0x7fe9e6c319c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e6c31b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e6c31ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e6c31e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e6c30030"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e6c301c0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e6c30350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e6c304e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe9e6c35020" loc="46:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe9e6c35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7830"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe9e78b7ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e6c32870"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e6c34840"/>
        <function-ref name="startAt" scoped="" ref="0x7fe9e6c32220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e6c34d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe9e6c32d30"/>
        <function-ref name="start" scoped="" ref="0x7fe9e6c35e30"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e6c34380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe9e6c36660" loc="45:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e6c36660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e6c369e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fe9e6c30770" loc="48:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe9e6c30770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe9e6c30af0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe9e6c30c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e6c30e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe9e6c2f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe9e6c2f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e6c2f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe9e6c2f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe9e6c2f660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe9e6c2f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe9e7594020" loc="43:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe9e7594020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe9e7594e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7593800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7593340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7593cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fe9e758b020" loc="43:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fe9e758b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7830"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe9e78b7ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe9e758be30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7589800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7589340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7589cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fe9e75772c0" loc="45:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe9e75772c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7577640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe9e75777d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe9e7577960"/>
        <function-ref name="get" scoped="" ref="0x7fe9e7577af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe9e7577c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7577e10"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e7576020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e75761b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7576340"/>
        <function-ref name="setMode" scoped="" ref="0x7fe9e75764d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe9e7576660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe9e75860a0" loc="44:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe9e75860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7830"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe9e78b7ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe9e7579020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e75799a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e75794e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7579e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fe9e7555540" loc="63:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fe9e7555540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7830"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe9e78b7ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe9e75543d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7554d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7554890"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7553260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe9e75580f0" loc="62:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe9e75580f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe9e7557020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e75579a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e75574e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7557e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe9e6c4c890" loc="61:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe9e6c4c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e6c480d0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e6c490d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe9e6c49a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e6c49590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe9e6c48590"/>
        <function-ref name="start" scoped="" ref="0x7fe9e6c4b6e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e6c4bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fe9e6c440a0" loc="73:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fe9e6c440a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7830"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe9e78b7ba0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e6c42b30"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e6c439f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe9e6c424e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e6c42020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe9e6c41020"/>
        <function-ref name="start" scoped="" ref="0x7fe9e6c43020"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e6c43530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe9e6c48c00" loc="68:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe9e6c48c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe9e6c47a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e6c464e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e6c46020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e6c469a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fe9e74e1490" loc="74:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fe9e74e1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe9e74e1810"/>
        <function-ref name="runTask" scoped="" ref="0x7fe9e74e19a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fe9e74e41d0" loc="49:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe9e74e41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e74e2b30"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e74e39f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe9e74e24e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e74e2020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe9e74e1020"/>
        <function-ref name="start" scoped="" ref="0x7fe9e74e3020"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e74e3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe9e74ebcf0" loc="48:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e74ebcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e74e6220"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e74e87c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe9e74e7590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe9e74e7110"/>
        <function-ref name="getdt" scoped="" ref="0x7fe9e74e6b20"/>
        <function-ref name="gett0" scoped="" ref="0x7fe9e74e66a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e74e8c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe9e74e9940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe9e74e7ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe9e74e9e10"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e74e8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fe9e7490e80" loc="71:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fe9e7490e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe9e748f220"/>
        <function-ref name="runTask" scoped="" ref="0x7fe9e748f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fe9e7496c30" loc="49:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fe9e7496c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e7490110"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e74936a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe9e74924a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe9e7492020"/>
        <function-ref name="getdt" scoped="" ref="0x7fe9e7490a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fe9e7490590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e7493b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe9e7494860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe9e7492ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe9e7494d30"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e7493220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe9e749b690" loc="48:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe9e749b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe9e7497cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7499260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe9e7497090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe9e7499ba0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe9e7496680"/>
        <function-ref name="gett0" scoped="" ref="0x7fe9e74961e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe9e7499700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe9e749a390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe9e74976c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe9e749a880"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e749ad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe9e748dcf0" loc="48:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fe9e748dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe9e748c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe9e7482020" loc="49:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe9e7482020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe9e78b7080"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe9e78b73f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe9e7482e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe9e7481800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe9e7481340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe9e7481cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe9e746f430" loc="49:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <component-ref qname="RovingNetworksC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e746f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e746f7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Bluetooth" ref="0x7fe9e74727e0" loc="48:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <component-ref qname="RovingNetworksC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Bluetooth" scoped="" ref="0x7fe9e74727e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Bluetooth"/>
      </instance>
      <interface-functions>
        <function-ref name="setDeviceClass" scoped="" ref="0x7fe9e746f020"/>
        <function-ref name="setBaudrate" scoped="" ref="0x7fe9e7472cf0"/>
        <function-ref name="setDiscoverable" scoped="" ref="0x7fe9e7472e80"/>
        <function-ref name="dataAvailable" scoped="" ref="0x7fe9e74711c0"/>
        <function-ref name="disconnect" scoped="" ref="0x7fe9e746f1b0"/>
        <function-ref name="connectionClosed" scoped="" ref="0x7fe9e7471350"/>
        <function-ref name="setName" scoped="" ref="0x7fe9e74714e0"/>
        <function-ref name="setServiceName" scoped="" ref="0x7fe9e7471670"/>
        <function-ref name="setRawBaudrate" scoped="" ref="0x7fe9e7471800"/>
        <function-ref name="setPagingTime" scoped="" ref="0x7fe9e7471990"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe9e7471b20"/>
        <function-ref name="setInquiryTime" scoped="" ref="0x7fe9e7471cb0"/>
        <function-ref name="connect" scoped="" ref="0x7fe9e7471e40"/>
        <function-ref name="connectionMade" scoped="" ref="0x7fe9e7470120"/>
        <function-ref name="setAuthentication" scoped="" ref="0x7fe9e74702b0"/>
        <function-ref name="resetDefaults" scoped="" ref="0x7fe9e7472b60"/>
        <function-ref name="commandModeEnded" scoped="" ref="0x7fe9e7471030"/>
        <function-ref name="setServiceClass" scoped="" ref="0x7fe9e7470440"/>
        <function-ref name="write" scoped="" ref="0x7fe9e74705d0"/>
        <function-ref name="discoverDevices" scoped="" ref="0x7fe9e7470760"/>
        <function-ref name="setRadioMode" scoped="" ref="0x7fe9e74708f0"/>
        <function-ref name="setPIN" scoped="" ref="0x7fe9e7470a80"/>
        <function-ref name="setEncryption" scoped="" ref="0x7fe9e7470c10"/>
        <function-ref name="disableRemoteConfig" scoped="" ref="0x7fe9e7470da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe9e7472020" loc="47:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <component-ref qname="RovingNetworksC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe9e7472020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe9e74723a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e7472530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="runSetCommands" ref="0x7fe9e7307380" loc="376:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="runSetCommands" scoped="" ref="0x7fe9e7307380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe9e7307700"/>
        <function-ref name="runTask" scoped="" ref="0x7fe9e7307890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="runMasterCommands" ref="0x7fe9e731b600" loc="302:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="runMasterCommands" scoped="" ref="0x7fe9e731b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe9e731b980"/>
        <function-ref name="runTask" scoped="" ref="0x7fe9e731bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConnectionInterrupt" ref="0x7fe9e7373a70" loc="57:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConnectionInterrupt" scoped="" ref="0x7fe9e7373a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7373df0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7370020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e73701b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e7370340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e73704d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e7370660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe9e73e73b0" loc="49:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe9e73e73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe9e73e7730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTControl" ref="0x7fe9e7377690" loc="54:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UARTControl" scoped="" ref="0x7fe9e7377690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe9e7377a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe9e7377ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe9e7377d30"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe9e73e2020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe9e73e21b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe9e73e2340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe9e73e24d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe9e73e2660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe9e73e27f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe9e73e2980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe9e73e2b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe9e73e2ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe9e73e2e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe9e73e1120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe9e73e12b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe9e73e1440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe9e73e15d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fe9e73e1760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe9e73e18f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe9e73e1a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe9e73e1c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe9e73e1da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe9e73b0020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe9e73b01b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e73b0340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe9e73b06d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe9e73b0860"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe9e73b09f0"/>
        <function-ref name="tx" scoped="" ref="0x7fe9e73b0b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe9e73b0d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe9e7376020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe9e73761b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe9e7376340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe9e73764d0"/>
        <function-ref name="rx" scoped="" ref="0x7fe9e7376660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe9e73767f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe9e7376980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe9e7376b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe9e7376ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe9e7376e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTData" ref="0x7fe9e7372a00" loc="55:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UARTData" scoped="" ref="0x7fe9e7372a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe9e7372d80"/>
        <function-ref name="txDone" scoped="" ref="0x7fe9e7374020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RTSInterrupt" ref="0x7fe9e736daa0" loc="56:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RTSInterrupt" scoped="" ref="0x7fe9e736daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e736de20"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7373020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e73731b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e7373340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e73734d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e7373660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe9e73708e0" loc="59:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe9e73708e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe9e7370c60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe9e7370df0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe9e736c020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe9e736c1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe9e736c340"/>
        <function-ref name="get" scoped="" ref="0x7fe9e736c4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe9e736c660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe9e736cca0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e736c7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe9e736c980"/>
        <function-ref name="led2On" scoped="" ref="0x7fe9e736cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Bluetooth" ref="0x7fe9e73e62d0" loc="51:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Bluetooth" scoped="" ref="0x7fe9e73e62d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Bluetooth"/>
      </instance>
      <interface-functions>
        <function-ref name="setDeviceClass" scoped="" ref="0x7fe9e73e4b10"/>
        <function-ref name="setBaudrate" scoped="" ref="0x7fe9e73e67e0"/>
        <function-ref name="setDiscoverable" scoped="" ref="0x7fe9e73e6970"/>
        <function-ref name="dataAvailable" scoped="" ref="0x7fe9e73e6c90"/>
        <function-ref name="disconnect" scoped="" ref="0x7fe9e73e4ca0"/>
        <function-ref name="connectionClosed" scoped="" ref="0x7fe9e73e6e20"/>
        <function-ref name="setName" scoped="" ref="0x7fe9e73e5020"/>
        <function-ref name="setServiceName" scoped="" ref="0x7fe9e73e51b0"/>
        <function-ref name="setRawBaudrate" scoped="" ref="0x7fe9e73e5340"/>
        <function-ref name="setPagingTime" scoped="" ref="0x7fe9e73e54d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe9e73e5660"/>
        <function-ref name="setInquiryTime" scoped="" ref="0x7fe9e73e57f0"/>
        <function-ref name="connect" scoped="" ref="0x7fe9e73e5980"/>
        <function-ref name="connectionMade" scoped="" ref="0x7fe9e73e5c10"/>
        <function-ref name="setAuthentication" scoped="" ref="0x7fe9e73e5da0"/>
        <function-ref name="resetDefaults" scoped="" ref="0x7fe9e73e6650"/>
        <function-ref name="commandModeEnded" scoped="" ref="0x7fe9e73e6b00"/>
        <function-ref name="setServiceClass" scoped="" ref="0x7fe9e73e4020"/>
        <function-ref name="write" scoped="" ref="0x7fe9e73e41b0"/>
        <function-ref name="discoverDevices" scoped="" ref="0x7fe9e73e4340"/>
        <function-ref name="setRadioMode" scoped="" ref="0x7fe9e73e44d0"/>
        <function-ref name="setPIN" scoped="" ref="0x7fe9e73e4660"/>
        <function-ref name="setEncryption" scoped="" ref="0x7fe9e73e47f0"/>
        <function-ref name="disableRemoteConfig" scoped="" ref="0x7fe9e73e4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe9e73e79f0" loc="50:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe9e73e79f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe9e73e7d70"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e73e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNextChar" ref="0x7fe9e735c7c0" loc="88:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendNextChar" scoped="" ref="0x7fe9e735c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe9e735cb40"/>
        <function-ref name="runTask" scoped="" ref="0x7fe9e735ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fe9e72b3bc0" loc="46:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fe9e72b3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72b2020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72b21b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72b2340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72b24d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72b2660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72b27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fe9e72a8bc0" loc="58:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fe9e72a8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72a7020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72a71b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72a7340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72a74d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72a7660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72a77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fe9e72b0bc0" loc="49:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fe9e72b0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72af020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72af1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72af340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72af4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72af660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fe9e72aebc0" loc="53:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fe9e72aebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72ad020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72ad1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72ad340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72ad4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72ad660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72ad7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fe9e72b5bc0" loc="44:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fe9e72b5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72b4020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72b41b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72b4340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72b44d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72b4660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72b47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fe9e72abbc0" loc="56:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fe9e72abbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72a90a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72a9230"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72a93c0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72a9550"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72a96e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72a9870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fe9e72b2bc0" loc="47:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fe9e72b2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72b1020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72b11b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72b1340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72b14d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72b1660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fe9e72a7bc0" loc="59:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fe9e72a7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72a6020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72a61b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72a6340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72a64d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72a6660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72a67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fe9e72b9cf0" loc="42:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fe9e72b9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72b60a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72b6230"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72b63c0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72b6550"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72b66e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72b6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fe9e72adbc0" loc="54:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fe9e72adbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72ac020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72ac1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72ac340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72ac4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72ac660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72ac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fe9e72b4bc0" loc="45:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fe9e72b4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72b3020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72b31b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72b3340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72b34d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72b3660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72b37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fe9e72a9c40" loc="57:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fe9e72a9c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72a8020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72a81b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72a8340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72a84d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72a8660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72a87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fe9e72b1bc0" loc="48:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fe9e72b1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72b0020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72b01b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72b0340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72b04d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72b0660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fe9e72afbc0" loc="52:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fe9e72afbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72ae020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72ae1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72ae340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72ae4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72ae660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72ae7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fe9e72b6c40" loc="43:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fe9e72b6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72b5020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72b51b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72b5340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72b54d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72b5660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72b57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fe9e72acbc0" loc="55:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fe9e72acbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72ab020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72ab1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72ab340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72ab4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72ab660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fe9e729ea30" loc="43:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fe9e729ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e729edb0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e729d020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e729d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e729d340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e729d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e729d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fe9e7294bc0" loc="55:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fe9e7294bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7293020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72931b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e7293340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72934d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e7293660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72937f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fe9e729ba30" loc="46:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fe9e729ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e729bdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e729a020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e729a1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e729a340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e729a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e729a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fe9e7299a30" loc="50:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fe9e7299a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7299db0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7298020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72981b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e7298340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72984d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e7298660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fe9e72a0a30" loc="41:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fe9e72a0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72a0db0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e729f020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e729f1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e729f340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e729f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e729f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fe9e7296a30" loc="53:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fe9e7296a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7295020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72951b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e7295340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72954d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e7295660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fe9e729da30" loc="44:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fe9e729da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e729ddb0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e729c020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e729c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e729c340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e729c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e729c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fe9e7293bc0" loc="56:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fe9e7293bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7292020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72921b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e7292340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72924d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e7292660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72927f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fe9e72a59c0" loc="39:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fe9e72a59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72a5d40"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72a1020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72a11b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72a1340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72a14d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72a1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fe9e7298a30" loc="51:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fe9e7298a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7298db0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7297020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72971b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e7297340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72974d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e7297660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fe9e729fa30" loc="42:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fe9e729fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e729fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e729e020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e729e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e729e340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e729e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e729e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fe9e7295bc0" loc="54:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fe9e7295bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7294020"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72941b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e7294340"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72944d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e7294660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72947f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fe9e729ca30" loc="45:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fe9e729ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e729cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e729b020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e729b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e729b340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e729b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e729b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fe9e729aa30" loc="49:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fe9e729aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e729adb0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7299020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72991b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e7299340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72994d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e7299660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fe9e72a1a30" loc="40:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fe9e72a1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e72a1db0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e72a0020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72a01b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e72a0340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72a04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e72a0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fe9e7297a30" loc="52:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fe9e7297a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe9e7297db0"/>
        <function-ref name="fired" scoped="" ref="0x7fe9e7296020"/>
        <function-ref name="disable" scoped="" ref="0x7fe9e72961b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe9e7296340"/>
        <function-ref name="enable" scoped="" ref="0x7fe9e72964d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe9e7296660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fe9e71b8860" loc="78:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe9e71b8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe9e71b8be0"/>
        <function-ref name="txDone" scoped="" ref="0x7fe9e71b8d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fe9e71bb450" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe9e71bb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe9e71bb7d0"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e71bb960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fe9e71bbc80" loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe9e71bbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe9e71be0a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe9e71be230"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe9e71be3c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe9e71be550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe9e71be6e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe9e71be870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe9e71bea00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe9e71beb90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe9e71bed20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe9e71bd020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe9e71bd1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe9e71bd340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe9e71bd4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe9e71bd760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe9e71bd8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe9e71bda80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe9e71bdc10"/>
        <function-ref name="isUart" scoped="" ref="0x7fe9e71bdda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe9e71ba020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe9e71ba1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe9e71ba340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe9e71ba4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe9e71ba660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe9e71ba7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e71ba980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe9e71bad10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe9e71b9020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe9e71b91b0"/>
        <function-ref name="tx" scoped="" ref="0x7fe9e71b9340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe9e71b94d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe9e71b9660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe9e71b97f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe9e71b9980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe9e71b9b10"/>
        <function-ref name="rx" scoped="" ref="0x7fe9e71b9ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe9e71b9e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe9e71b8020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe9e71b81b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe9e71b8340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe9e71b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fe9e71ab990" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fe9e71ab990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e71abd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e71aa020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e71aa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e71aa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e71aa4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e71aa660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e71aa7f0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e71aa980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e71aab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e71aaca0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e71aae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e71a9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e71a91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e71a9440"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e71a95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fe9e71af130" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fe9e71af130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe9e71af4b0"/>
        <function-ref name="txDone" scoped="" ref="0x7fe9e71af640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fe9e71a9990" loc="81:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fe9e71a9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e71a9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e71a8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e71a81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e71a8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e71a84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e71a8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e71a87f0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e71a8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e71a8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e71a8ca0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e71a8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e71a7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e71a71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e71a7440"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e71a75d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fe9e71a7990" loc="82:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fe9e71a7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e71a7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e71a5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e71a51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e71a5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e71a54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e71a5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e71a57f0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e71a5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e71a5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e71a5ca0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e71a5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e71a4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e71a41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e71a4440"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e71a45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fe9e71b4550" loc="75:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fe9e71b4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe9e71b48d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe9e71b4a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe9e71b4bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe9e71b4d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe9e71b3020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe9e71b31b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe9e71b3340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe9e71b34d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe9e71b3660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe9e71b37f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe9e71b3980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe9e71b3b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe9e71b3ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe9e71b2020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe9e71b21b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe9e71b2340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe9e71b24d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fe9e71b2660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe9e71b27f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe9e71b2980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe9e71b2b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe9e71b2ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe9e71b2e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe9e71b1020"/>
        <function-ref name="getMode" scoped="" ref="0x7fe9e71b11b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe9e71b1540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe9e71b16d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe9e71b1860"/>
        <function-ref name="tx" scoped="" ref="0x7fe9e71b19f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe9e71b1b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe9e71b1d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe9e71b0020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe9e71b01b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe9e71b0340"/>
        <function-ref name="rx" scoped="" ref="0x7fe9e71b04d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe9e71b0660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe9e71b07f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe9e71b0980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe9e71b0b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe9e71b0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fe9e71b7bc0" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe9e71b7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe9e71b4020"/>
        <function-ref name="stop" scoped="" ref="0x7fe9e71b41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fe9e71ad990" loc="79:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fe9e71ad990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e71add10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e71ac020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e71ac1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e71ac340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e71ac4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e71ac660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e71ac7f0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e71ac980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e71acb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e71acca0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e71ace30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e71ab020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e71ab1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e71ab440"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e71ab5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fe9e71afa00" loc="78:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fe9e71afa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe9e71afd80"/>
        <function-ref name="isInput" scoped="" ref="0x7fe9e71ae020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe9e71ae1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe9e71ae340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe9e71ae4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe9e71ae660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe9e71ae7f0"/>
        <function-ref name="get" scoped="" ref="0x7fe9e71ae980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe9e71aeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe9e71aeca0"/>
        <function-ref name="set" scoped="" ref="0x7fe9e71aee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe9e71ad020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe9e71ad1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe9e71ad440"/>
        <function-ref name="clr" scoped="" ref="0x7fe9e71ad5d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fe9e7abc760" loc="62:../../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe9e8115c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fe9e7aba390" loc="60:../../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fe9e7a7db40" loc="48:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fe9e7a80de0" loc="43:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fe9e7a7d420" loc="47:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fe9e7a80700" loc="42:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fe9e7a7f5a0" loc="45:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fe9e7a83900" loc="40:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fe9e7a80020" loc="41:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fe9e7a7fcc0" loc="46:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fe9e7d9a020" loc="62:../../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fe9e805b3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fe9e7a2b020" loc="55:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fe9e7a2ccc0" loc="55:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fe9e7a2f390" loc="42:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe9e7a755a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fe9e7a74020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fe9e7a2b890" loc="57:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fe9e7a297b0" loc="59:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fe9e7a2c560" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fe9e7a29020" loc="58:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fe9e7a2fb30" loc="43:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fe9e7a2d350" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fe9e7a2dda0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe9e7a755a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fe9e7a74020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe9e7a2db20" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe9e7a755a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fe9e7a74020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fe9e7a1d0e0" loc="44:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fe9e7a1b730" loc="84:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fe9e7a1b4b0" loc="84:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fe9e7a192e0" loc="91:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fe9e7a19060" loc="91:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fe9e7a1cca0" loc="73:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fe9e7a1c3e0" loc="68:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fe9e7a1da90" loc="56:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fe9e7a1d810" loc="56:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fe9e7a243e0" loc="40:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fe9e7a24d60" loc="41:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fe9e7a24ae0" loc="41:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fe9e7a23790" loc="42:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fe9e7a23510" loc="42:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fe9e7a222a0" loc="43:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fe9e7a22020" loc="43:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe9e7a22990" loc="45:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fe9e7a34810" loc="52:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fe9e7a322a0" loc="55:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fe9e7a32020" loc="55:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fe9e7a33020" loc="53:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe9e7a3aab0" loc="45:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fe9e7a33760" loc="54:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fe9e7a379b0" loc="47:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fe9e7a34120" loc="51:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fe9e7a37270" loc="46:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fe9e7a360e0" loc="48:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fe9e7a369f0" loc="50:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fe9e7a36770" loc="50:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fe9e7a32cb0" loc="56:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fe9e7a32a30" loc="56:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fe9e79f41f0" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fe9e7aec7f0" loc="85:../../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fe9e7ae9020" loc="86:../../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fe9e7aec020" loc="79:../../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fe9e7f74810" loc="52:../../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fe9e811a020" loc="57:../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fe9e8119020" loc="72:../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fe9e811a790" loc="65:../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fe9e810e270" loc="67:../../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe9e8115c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fe9e810eac0" loc="75:../../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe9e78b6990" loc="53:../../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe9e78b6990"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fe9e78ae7c0" loc="136:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe9e78b2020" loc="83:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fe9e78b0da0" loc="114:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe9e78b07d0" loc="114:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fe9e78b0b10" loc="114:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fe9e78b0020" loc="98:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fe9e78ad8a0" loc="151:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fe9e78ad020" loc="144:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fe9e78b2800" loc="92:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fe9e78b4530" loc="64:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe9e78b42b0" loc="64:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fe9e78afdc0" loc="129:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe9e78af7f0" loc="129:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fe9e78afb30" loc="129:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fe9e78b3020" loc="73:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe9e78b4d70" loc="73:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe9e78b3820" loc="78:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="52:../../../../tos/platforms/shimmer2r/Leds.nc">
      <documentation loc="33:../../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fe9e78da530" loc="62:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="59:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fe9e78dace0" loc="68:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="64:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fe9e78d94e0" loc="73:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="70:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fe9e78d8490" loc="84:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="80:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fe9e78d7bd0" loc="101:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="97:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe9e78d5420" loc="117:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="103:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fe9e78d9c70" loc="78:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="75:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe9e78d4020" loc="134:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="120:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fe9e78d5d10" loc="134:../../../../tos/platforms/shimmer2r/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fe9e78dcd60" loc="57:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="54:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fe9e78d8c70" loc="90:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="87:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fe9e78d7420" loc="95:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="92:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Bluetooth" loc="47:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
      <documentation loc="34:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <short>&#10; </short>
        <long>&#10; @author Steve Ayer&#10; @author Adrian Burns&#10; @date February, 2007&#10;&#10; @author Mike Healy&#10; @date April 20, 2009 - ported to TinyOS 2.x &#10;</long>
      </documentation>
      <function command="" provided="0" name="resetDefaults" ref="0x7fe9e78bf720" loc="90:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setBaudrate" ref="0x7fe9e78c2c20" loc="84:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_baud" ref="0x7fe9e78c29a0" loc="84:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDiscoverable" ref="0x7fe9e78ca970" loc="66:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="disc" ref="0x7fe9e78ca6f0" loc="66:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="commandModeEnded" ref="0x7fe9e78bd270" loc="95:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataAvailable" ref="0x7fe9e78bdc30" loc="103:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe9e78bd9b0" loc="103:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="connectionClosed" ref="0x7fe9e78beaf0" loc="94:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reason" ref="0x7fe9e78be870" loc="94:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setName" ref="0x7fe9e78c75a0" loc="69:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x7fe9e78c7320" loc="69:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setServiceName" ref="0x7fe9e78c4350" loc="72:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x7fe9e78c40d0" loc="72:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRawBaudrate" ref="0x7fe9e78c22a0" loc="78:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rate_factor" ref="0x7fe9e78c2020" loc="78:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPagingTime" ref="0x7fe9e78c0620" loc="88:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hexval_time" ref="0x7fe9e78c03a0" loc="88:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fe9e78bb350" loc="104:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInquiryTime" ref="0x7fe9e78bf020" loc="89:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hexval_time" ref="0x7fe9e78c0d30" loc="89:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="connect" ref="0x7fe9e78cb630" loc="61:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe9e8115c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fe9e78cb3b0" loc="61:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="connectionMade" ref="0x7fe9e78be120" loc="93:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7fe9e78bfe70" loc="93:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAuthentication" ref="0x7fe9e78c8c40" loc="68:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="auth" ref="0x7fe9e78c89c0" loc="68:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setServiceClass" ref="0x7fe9e78c6990" loc="71:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="class" ref="0x7fe9e78c6710" loc="71:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe9e78ced60" loc="51:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe9e8115c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fe9e78ce7a0" loc="51:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe9e78cead0" loc="51:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="discoverDevices" ref="0x7fe9e78ccc20" loc="58:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRadioMode" ref="0x7fe9e78ca020" loc="64:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fe9e78cbd20" loc="64:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPIN" ref="0x7fe9e78c6020" loc="70:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x7fe9e78c7c20" loc="70:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEncryption" ref="0x7fe9e78c82e0" loc="67:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enc" ref="0x7fe9e78c8060" loc="67:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRemoteConfig" ref="0x7fe9e78c37c0" loc="74:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="disableConfig" ref="0x7fe9e78c3540" loc="74:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDeviceClass" ref="0x7fe9e78c4cb0" loc="73:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="class" ref="0x7fe9e78c4a30" loc="73:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disconnect" ref="0x7fe9e78cc4d0" loc="54:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe9e8115c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fe9e78d1020" loc="95:../../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe9e8115c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe9e78d1830" loc="105:../../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe9e8115c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fe9e7889270" loc="44:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fe9e78899a0" loc="45:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fe9e788a420" loc="42:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fe9e7888820" loc="47:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe9e788ab20" loc="43:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fe9e78880e0" loc="46:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe9e788b610" loc="40:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fe9e788bce0" loc="41:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fe9e785e0e0" loc="78:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fe9e785e830" loc="80:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fe9e78592e0" loc="110:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe9e8115c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fe9e7859060" loc="110:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fe9e7860940" loc="58:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fe9e785d780" loc="87:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fe9e7859bd0" loc="117:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fe9e785d020" loc="85:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe9e785f920" loc="73:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fe9e785a020" loc="99:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fe9e785f120" loc="66:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe9e7864a90" loc="48:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fe9e785b020" loc="92:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fe9e785a7c0" loc="101:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fe9e785b7e0" loc="94:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fe9e78601f0" loc="53:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe9e760fc40" loc="53:../../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe9e760fc40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fe9e760c5a0" loc="61:../../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe9e8af4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe9e76065d0" loc="56:../../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe9e76065d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe9e7606810" loc="56:../../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe9e7606810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fe9e7602390" loc="109:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe9e7606810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe9e76043b0" loc="78:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fe9e76039d0" loc="103:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe9e7606810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe9e7606810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe9e7603400" loc="103:../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe9e7606810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fe9e7603740" loc="103:../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe9e7606810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fe9e7604b90" loc="88:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fe9e7602b80" loc="116:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe9e7606810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe9e7605390" loc="66:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe9e7606810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe9e7605110" loc="66:../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe9e7606810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe9e7605bc0" loc="73:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe9e75924f0" loc="57:../../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe9e75924f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe9e7592730" loc="57:../../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe9e7592730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fe9e7591070" loc="64:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe9e7592730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fe9e7590190" loc="76:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fe9e75918f0" loc="71:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fe9e75908f0" loc="82:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fe9e736fc00" loc="52:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe9e736d6b0" loc="72:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fe9e736f470" loc="47:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fe9e736ee60" loc="67:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fe9e736ebe0" loc="67:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fe9e7374cb0" loc="42:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fe9e736e420" loc="59:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <function command="" provided="0" name="isTxEmpty" ref="0x7fe9e7378020" loc="213:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fe9e7385ac0" loc="143:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fe9e7392900" loc="50:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe9e73dd4c0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fe9e73ddd00"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe9e7392680" loc="50:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe9e73dd4c0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fe9e73ddd00"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fe9e7387bf0" loc="123:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fe9e738fd70" loc="70:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe9e73d9450"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fe9e73d9c90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe9e738faf0" loc="70:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe9e73d9450"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fe9e73d9c90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fe9e737d0e0" loc="180:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fe9e737b7a0" loc="197:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fe9e738f350" loc="65:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe9e73db3b0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fe9e73dbb40"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fe9e738e590" loc="75:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe9e73d9450"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fe9e73d9c90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fe9e738a410" loc="97:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fe9e738a190" loc="97:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fe9e738ba50" loc="95:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fe9e737f990" loc="179:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fe9e7390b40" loc="60:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe9e73db3b0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fe9e73dbb40"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe9e73908c0" loc="60:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe9e73db3b0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fe9e73dbb40"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fe9e738c7d0" loc="85:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fe9e737d810" loc="181:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fe9e738b2a0" loc="90:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fe9e738b020" loc="90:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fe9e7389cc0" loc="113:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fe9e7387460" loc="118:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fe9e7380ac0" loc="177:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fe9e7382960" loc="163:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fe9e7386b50" loc="133:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fe9e737f270" loc="178:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fe9e73842d0" loc="148:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fe9e737c020" loc="182:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fe9e738abf0" loc="103:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fe9e73e3470"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fe9e73e0b80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fe9e737c7c0" loc="187:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fe9e7379770" loc="207:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fe9e738c020" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fe9e738ecb0" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe9e8af4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fe9e73789c0" loc="224:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe9e7378740" loc="224:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fe9e7390120" loc="55:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe9e73dd4c0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fe9e73ddd00"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fe9e7386390" loc="128:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fe9e7384a20" loc="153:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fe9e73802a0" loc="174:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fe9e73ad510"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fe9e73ad930"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe9e7380020" loc="174:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fe9e73ad510"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fe9e73ad930"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fe9e7381450" loc="168:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fe9e73c16a0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fe9e73c1ac0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe9e73811d0" loc="168:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fe9e73c16a0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fe9e73c1ac0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fe9e73772b0" loc="231:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fe9e737b020" loc="192:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fe9e7389420" loc="108:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe9e811e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fe9e7379020" loc="202:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fe9e73821f0" loc="158:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fe9e7385350" loc="138:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fe9e7372640" loc="54:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe9e73723c0" loc="54:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe9e8af4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fe9e7375bf0" loc="49:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fe9e71bc7b0" loc="95:../../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe9e8115c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe9e71bb030" loc="105:../../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe9e8115c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
